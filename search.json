[
  {
    "objectID": "report.html",
    "href": "report.html",
    "title": "Report",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "About",
      "Report"
    ]
  },
  {
    "objectID": "LICENSE-CCBY.html",
    "href": "LICENSE-CCBY.html",
    "title": "omeka2dsp",
    "section": "",
    "text": "Attribution 4.0 International\n=======================================================================\nCreative Commons Corporation (“Creative Commons”) is not a law firm and does not provide legal services or legal advice. Distribution of Creative Commons public licenses does not create a lawyer-client or other relationship. Creative Commons makes its licenses and related information available on an “as-is” basis. Creative Commons gives no warranties regarding its licenses, any material licensed under their terms and conditions, or any related information. Creative Commons disclaims all liability for damages resulting from their use to the fullest extent possible.\nUsing Creative Commons Public Licenses\nCreative Commons public licenses provide a standard set of terms and conditions that creators and other rights holders may use to share original works of authorship and other material subject to copyright and certain other rights specified in the public license below. The following considerations are for informational purposes only, are not exhaustive, and do not form part of our licenses.\n Considerations for licensors: Our public licenses are\n intended for use by those authorized to give the public\n permission to use material in ways otherwise restricted by\n copyright and certain other rights. Our licenses are\n irrevocable. Licensors should read and understand the terms\n and conditions of the license they choose before applying it.\n Licensors should also secure all rights necessary before\n applying our licenses so that the public can reuse the\n material as expected. Licensors should clearly mark any\n material not subject to the license. This includes other CC-\n licensed material, or material used under an exception or\n limitation to copyright. More considerations for licensors:\nwiki.creativecommons.org/Considerations_for_licensors\n\n Considerations for the public: By using one of our public\n licenses, a licensor grants the public permission to use the\n licensed material under specified terms and conditions. If\n the licensor's permission is not necessary for any reason--for\n example, because of any applicable exception or limitation to\n copyright--then that use is not regulated by the license. Our\n licenses grant only permissions under copyright and certain\n other rights that a licensor has authority to grant. Use of\n the licensed material may still be restricted for other\n reasons, including because others have copyright or other\n rights in the material. A licensor may make special requests,\n such as asking that all changes be marked or described.\n Although not required by our licenses, you are encouraged to\n respect those requests where reasonable. More_considerations\n for the public:\nwiki.creativecommons.org/Considerations_for_licensees\n=======================================================================\nCreative Commons Attribution 4.0 International Public License\nBy exercising the Licensed Rights (defined below), You accept and agree to be bound by the terms and conditions of this Creative Commons Attribution 4.0 International Public License (“Public License”). To the extent this Public License may be interpreted as a contract, You are granted the Licensed Rights in consideration of Your acceptance of these terms and conditions, and the Licensor grants You such rights in consideration of benefits the Licensor receives from making the Licensed Material available under these terms and conditions.\nSection 1 – Definitions.\n\nAdapted Material means material subject to Copyright and Similar Rights that is derived from or based upon the Licensed Material and in which the Licensed Material is translated, altered, arranged, transformed, or otherwise modified in a manner requiring permission under the Copyright and Similar Rights held by the Licensor. For purposes of this Public License, where the Licensed Material is a musical work, performance, or sound recording, Adapted Material is always produced where the Licensed Material is synched in timed relation with a moving image.\nAdapter’s License means the license You apply to Your Copyright and Similar Rights in Your contributions to Adapted Material in accordance with the terms and conditions of this Public License.\nCopyright and Similar Rights means copyright and/or similar rights closely related to copyright including, without limitation, performance, broadcast, sound recording, and Sui Generis Database Rights, without regard to how the rights are labeled or categorized. For purposes of this Public License, the rights specified in Section 2(b)(1)-(2) are not Copyright and Similar Rights.\nEffective Technological Measures means those measures that, in the absence of proper authority, may not be circumvented under laws fulfilling obligations under Article 11 of the WIPO Copyright Treaty adopted on December 20, 1996, and/or similar international agreements.\nExceptions and Limitations means fair use, fair dealing, and/or any other exception or limitation to Copyright and Similar Rights that applies to Your use of the Licensed Material.\nLicensed Material means the artistic or literary work, database, or other material to which the Licensor applied this Public License.\nLicensed Rights means the rights granted to You subject to the terms and conditions of this Public License, which are limited to all Copyright and Similar Rights that apply to Your use of the Licensed Material and that the Licensor has authority to license.\nLicensor means the individual(s) or entity(ies) granting rights under this Public License.\nShare means to provide material to the public by any means or process that requires permission under the Licensed Rights, such as reproduction, public display, public performance, distribution, dissemination, communication, or importation, and to make material available to the public including in ways that members of the public may access the material from a place and at a time individually chosen by them.\nSui Generis Database Rights means rights other than copyright resulting from Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, as amended and/or succeeded, as well as other essentially equivalent rights anywhere in the world.\nYou means the individual or entity exercising the Licensed Rights under this Public License. Your has a corresponding meaning.\n\nSection 2 – Scope.\n\nLicense grant.\n\nSubject to the terms and conditions of this Public License, the Licensor hereby grants You a worldwide, royalty-free, non-sublicensable, non-exclusive, irrevocable license to exercise the Licensed Rights in the Licensed Material to:\n\nreproduce and Share the Licensed Material, in whole or in part; and\nproduce, reproduce, and Share Adapted Material.\n\nExceptions and Limitations. For the avoidance of doubt, where Exceptions and Limitations apply to Your use, this Public License does not apply, and You do not need to comply with its terms and conditions.\nTerm. The term of this Public License is specified in Section 6(a).\nMedia and formats; technical modifications allowed. The Licensor authorizes You to exercise the Licensed Rights in all media and formats whether now known or hereafter created, and to make technical modifications necessary to do so. The Licensor waives and/or agrees not to assert any right or authority to forbid You from making technical modifications necessary to exercise the Licensed Rights, including technical modifications necessary to circumvent Effective Technological Measures. For purposes of this Public License, simply making modifications authorized by this Section 2(a)\n\nnever produces Adapted Material.\n\nDownstream recipients.\n\nOffer from the Licensor – Licensed Material. Every recipient of the Licensed Material automatically receives an offer from the Licensor to exercise the Licensed Rights under the terms and conditions of this Public License.\nNo downstream restrictions. You may not offer or impose any additional or different terms or conditions on, or apply any Effective Technological Measures to, the Licensed Material if doing so restricts exercise of the Licensed Rights by any recipient of the Licensed Material.\n\nNo endorsement. Nothing in this Public License constitutes or may be construed as permission to assert or imply that You are, or that Your use of the Licensed Material is, connected with, or sponsored, endorsed, or granted official status by, the Licensor or others designated to receive attribution as provided in Section 3(a)(1)(A)(i).\n\nOther rights.\n\nMoral rights, such as the right of integrity, are not licensed under this Public License, nor are publicity, privacy, and/or other similar personality rights; however, to the extent possible, the Licensor waives and/or agrees not to assert any such rights held by the Licensor to the limited extent necessary to allow You to exercise the Licensed Rights, but not otherwise.\nPatent and trademark rights are not licensed under this Public License.\nTo the extent possible, the Licensor waives any right to collect royalties from You for the exercise of the Licensed Rights, whether directly or through a collecting society under any voluntary or waivable statutory or compulsory licensing scheme. In all other cases the Licensor expressly reserves any right to collect such royalties.\n\n\nSection 3 – License Conditions.\nYour exercise of the Licensed Rights is expressly made subject to the following conditions.\n\nAttribution.\n\nIf You Share the Licensed Material (including in modified form), You must:\n\nretain the following if it is supplied by the Licensor with the Licensed Material:\n\nidentification of the creator(s) of the Licensed Material and any others designated to receive attribution, in any reasonable manner requested by the Licensor (including by pseudonym if designated);\na copyright notice;\na notice that refers to this Public License;\na notice that refers to the disclaimer of warranties;\na URI or hyperlink to the Licensed Material to the extent reasonably practicable;\n\nindicate if You modified the Licensed Material and retain an indication of any previous modifications; and\nindicate the Licensed Material is licensed under this Public License, and include the text of, or the URI or hyperlink to, this Public License.\n\nYou may satisfy the conditions in Section 3(a)(1) in any reasonable manner based on the medium, means, and context in which You Share the Licensed Material. For example, it may be reasonable to satisfy the conditions by providing a URI or hyperlink to a resource that includes the required information.\nIf requested by the Licensor, You must remove any of the information required by Section 3(a)(1)(A) to the extent reasonably practicable.\nIf You Share Adapted Material You produce, the Adapter’s License You apply must not prevent recipients of the Adapted Material from complying with this Public License.\n\n\nSection 4 – Sui Generis Database Rights.\nWhere the Licensed Rights include Sui Generis Database Rights that apply to Your use of the Licensed Material:\n\nfor the avoidance of doubt, Section 2(a)(1) grants You the right to extract, reuse, reproduce, and Share all or a substantial portion of the contents of the database;\nif You include all or a substantial portion of the database contents in a database in which You have Sui Generis Database Rights, then the database in which You have Sui Generis Database Rights (but not its individual contents) is Adapted Material; and\nYou must comply with the conditions in Section 3(a) if You Share all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not replace Your obligations under this Public License where the Licensed Rights include other Copyright and Similar Rights.\nSection 5 – Disclaimer of Warranties and Limitation of Liability.\n\nUNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS, IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION, WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS, ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\nTO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION, NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT, INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES, COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\nThe disclaimer of warranties and limitation of liability provided above shall be interpreted in a manner that, to the extent possible, most closely approximates an absolute disclaimer and waiver of all liability.\n\nSection 6 – Term and Termination.\n\nThis Public License applies for the term of the Copyright and Similar Rights licensed here. However, if You fail to comply with this Public License, then Your rights under this Public License terminate automatically.\nWhere Your right to use the Licensed Material has terminated under Section 6(a), it reinstates:\n\nautomatically as of the date the violation is cured, provided it is cured within 30 days of Your discovery of the violation; or\nupon express reinstatement by the Licensor.\n\nFor the avoidance of doubt, this Section 6(b) does not affect any right the Licensor may have to seek remedies for Your violations of this Public License.\nFor the avoidance of doubt, the Licensor may also offer the Licensed Material under separate terms or conditions or stop distributing the Licensed Material at any time; however, doing so will not terminate this Public License.\nSections 1, 5, 6, 7, and 8 survive termination of this Public License.\n\nSection 7 – Other Terms and Conditions.\n\nThe Licensor shall not be bound by any additional or different terms or conditions communicated by You unless expressly agreed.\nAny arrangements, understandings, or agreements regarding the Licensed Material not stated herein are separate from and independent of the terms and conditions of this Public License.\n\nSection 8 – Interpretation.\n\nFor the avoidance of doubt, this Public License does not, and shall not be interpreted to, reduce, limit, restrict, or impose conditions on any use of the Licensed Material that could lawfully be made without permission under this Public License.\nTo the extent possible, if any provision of this Public License is deemed unenforceable, it shall be automatically reformed to the minimum extent necessary to make it enforceable. If the provision cannot be reformed, it shall be severed from this Public License without affecting the enforceability of the remaining terms and conditions.\nNo term or condition of this Public License will be waived and no failure to comply consented to unless expressly agreed to by the Licensor.\nNothing in this Public License constitutes or may be interpreted as a limitation upon, or waiver of, any privileges and immunities that apply to the Licensor or You, including from the legal processes of any jurisdiction or authority.\n\n=======================================================================\nCreative Commons is not a party to its public licenses. Notwithstanding, Creative Commons may elect to apply one of its public licenses to material it publishes and in those instances will be considered the “Licensor.” The text of the Creative Commons public licenses is dedicated to the public domain under the CC0 Public Domain Dedication. Except for the limited purpose of indicating that material is shared under a Creative Commons public license or as otherwise permitted by the Creative Commons policies published at creativecommons.org/policies, Creative Commons does not authorize the use of the trademark “Creative Commons” or any other trademark or logo of Creative Commons without its prior written consent including, without limitation, in connection with any unauthorized modifications to any of its public licenses or any other arrangements, understandings, or agreements concerning use of licensed material. For the avoidance of doubt, this paragraph does not form part of the public licenses.\nCreative Commons may be contacted at creativecommons.org.\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "License (Data)"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html",
    "href": "CODE_OF_CONDUCT.html",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n\n\nExamples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n\n\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\n\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at info@stadtgeschichtebasel.ch. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\n\n\n\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-pledge",
    "href": "CODE_OF_CONDUCT.html#our-pledge",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#our-standards",
    "href": "CODE_OF_CONDUCT.html#our-standards",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Examples of behavior that contributes to a positive environment for our community include:\n\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "href": "CODE_OF_CONDUCT.html#enforcement-responsibilities",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#scope",
    "href": "CODE_OF_CONDUCT.html#scope",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces. Examples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement",
    "href": "CODE_OF_CONDUCT.html#enforcement",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Instances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at info@stadtgeschichtebasel.ch. All complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "href": "CODE_OF_CONDUCT.html#enforcement-guidelines",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "Community leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n\n\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n\n\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior. No interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding interactions in community spaces as well as external channels like social media. Violating these terms may lead to a temporary or permanent ban.\n\n\n\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time. No public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n\n\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "CODE_OF_CONDUCT.html#attribution",
    "href": "CODE_OF_CONDUCT.html#attribution",
    "title": "Contributor Covenant Code of Conduct",
    "section": "",
    "text": "This Code of Conduct is adapted from the Contributor Covenant, version 2.1, available at https://www.contributor-covenant.org/version/2/1/code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq. Translations are available at https://www.contributor-covenant.org/translations.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Code of Conduct"
    ]
  },
  {
    "objectID": "SECURITY.html",
    "href": "SECURITY.html",
    "title": "Security Policy",
    "section": "",
    "text": "To report a security issue, please email info@stadtgeschichtebasel.ch with a description of the issue, the steps you took to create the issue, affected versions, and, if known, mitigations for the issue. This project follows a 90 day disclosure timeline.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Security"
    ]
  },
  {
    "objectID": "SECURITY.html#reporting-a-vulnerability",
    "href": "SECURITY.html#reporting-a-vulnerability",
    "title": "Security Policy",
    "section": "",
    "text": "To report a security issue, please email info@stadtgeschichtebasel.ch with a description of the issue, the steps you took to create the issue, affected versions, and, if known, mitigations for the issue. This project follows a 90 day disclosure timeline.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Security"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "omeka2dsp",
    "section": "",
    "text": "This repository contains the pipeline and data model for the long-term preservation of the research data of Stadt.Geschichte.Basel (SGB) on the DaSCH Service Platform (DSP).\nIt enables the transfer of metadata and media files from the SGB Omeka S instance to the DSP. The pipeline detects changes, updates existing records, and ensures reproducible and open research.",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#documentation",
    "href": "index.html#documentation",
    "title": "omeka2dsp",
    "section": "📚 Documentation",
    "text": "📚 Documentation\nComprehensive documentation is available in the docs/ directory:\n\n📖 Complete Documentation – Full system documentation\n🏗️ Architecture Overview – System design and components\n🔄 Workflows – Data migration workflows with Mermaid diagrams\n🔧 API Reference – Python function documentation\n🧩 Data Model – Data model documentation\n\n\n📒 Quick Start Guides\n\n⚡ Installation & Setup\n⚙️ Configuration\n📋 Usage\n🛠️ Development\n🔍 Troubleshooting",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#quick-installation",
    "href": "index.html#quick-installation",
    "title": "omeka2dsp",
    "section": "⚡ Quick Installation",
    "text": "⚡ Quick Installation\nWe recommend using GitHub Codespaces for a reproducible setup.\n\nGitHub Codespaces (Recommended)\n\nClick the green &lt;&gt; Code button → “Codespaces” → “Create codespace on main”\nConfigure environment: cp example.env .env and edit with your credentials\nTest installation: uv run python scripts/api_get_project.py\n\n\n\nLocal Installation\n# Clone repository\ngit clone https://github.com/Stadt-Geschichte-Basel/omeka2dsp.git\ncd omeka2dsp\n\n# Install dependencies\npnpm install         # Node.js development tools\nuv sync             # Python dependencies with uv\n\n# Configure environment\ncp example.env .env\n# Edit .env with your credentials\n\n# Test installation\nuv run python scripts/api_get_project.py",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#quick-usage",
    "href": "index.html#quick-usage",
    "title": "omeka2dsp",
    "section": "🚀 Quick Usage",
    "text": "🚀 Quick Usage\n# Run sample data migration (recommended first test)\npython scripts/data_2_dasch.py -m sample_data\n\n# Run full migration\npython scripts/data_2_dasch.py -m all_data\n\n# Run test data migration\npython scripts/data_2_dasch.py -m test_data\n\nProcessing Modes\n\n\n\nMode\nDescription\nUse Case\n\n\n\n\nall_data\nProcess entire collection\nProduction migrations\n\n\nsample_data\nProcess random subset\nTesting and validation\n\n\ntest_data\nProcess predefined items\nDevelopment, debugging",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#system-architecture",
    "href": "index.html#system-architecture",
    "title": "omeka2dsp",
    "section": "🏗️ System Architecture",
    "text": "🏗️ System Architecture\n\n\n\n\n\ngraph LR\n    A[Omeka API] --&gt; B[Data Extraction]\n    B --&gt; C[Data Transformation]\n    C --&gt; D[DSP Upload]\n    D --&gt; E[DSP API]\n\n    F[Configuration] --&gt; B\n    F --&gt; C\n    F --&gt; D\n\n    style A fill:#e1f5fe\n    style E fill:#e8f5e8\n    style B fill:#fff3e0\n    style C fill:#fff3e0\n    style D fill:#fff3e0\n\n\n\n\n\n\n\nFeatures\n\n✅ Automated synchronization: detects and applies only necessary changes\n✅ Media file handling: transfers and processes associated files\n✅ Data validation: ensures data integrity throughout the process\n✅ Error recovery: robust error handling and retry mechanisms",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#repository-structure",
    "href": "index.html#repository-structure",
    "title": "omeka2dsp",
    "section": "📂 Repository Structure",
    "text": "📂 Repository Structure\nThis repository follows the Turing Way advanced structure:\n\nassets/ – images, logos, etc.\ndata/ – data files\ndocs/ – documentation of the repository and data\nproject-management/ – project management documents\nscripts/ – source code (migration scripts, utilities)\nreport.qmd – report describing the analysis of the data",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#data-model",
    "href": "index.html#data-model",
    "title": "omeka2dsp",
    "section": "📊 Data Model",
    "text": "📊 Data Model\nThe omeka2dsp system transforms data from Omeka’s metadata structure to the DaSCH Service Platform (DSP) using a specialized data model developed by Stadt.Geschichte.Basel’s research data management team.\n\nKey Components\n\nResource Classes: Maps Omeka item types to DSP ontology classes (e.g., sgb_PHOTO, sgb_DOCUMENT)\nProperty Mappings: Converts Omeka metadata fields to DSP property values with appropriate data types\nValue Transformations: Handles text values, URIs, dates, and linked resources according to DSP specifications\nMedia Integration: Processes and uploads associated files while maintaining metadata relationships\n\n\n\nStandards Compliance\nThe data model follows the manual for creating non-discriminatory metadata for historical sources and research data, ensuring inclusive and accessible metadata practices.\nFor detailed data model documentation, see Data Model Reference.",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#support",
    "href": "index.html#support",
    "title": "omeka2dsp",
    "section": "🛠️ Support",
    "text": "🛠️ Support\nThis project is maintained by Stadt.Geschichte.Basel. Support is provided publicly through GitHub.\n\n\n\nType\nPlatform\n\n\n\n\n🚨 Bug Reports\nGitHub Issues\n\n\n📊 Report bad data\nGitHub Issues\n\n\n📚 Docs Issue\nGitHub Issues\n\n\n🎁 Feature Requests\nGitHub Issues\n\n\n🛡 Security vulnerabilities\nSECURITY.md\n\n\n💬 General Questions\nGitHub Discussions",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#roadmap",
    "href": "index.html#roadmap",
    "title": "omeka2dsp",
    "section": "🗺 Roadmap",
    "text": "🗺 Roadmap\nNo changes are currently planned.",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#contributing",
    "href": "index.html#contributing",
    "title": "omeka2dsp",
    "section": "🤝 Contributing",
    "text": "🤝 Contributing\nContributions are welcome. Please see CONTRIBUTING.md for guidelines. If you find errors, propose new features, or want to extend the dataset, open an issue or a pull request.",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#versioning",
    "href": "index.html#versioning",
    "title": "omeka2dsp",
    "section": "🔖 Versioning",
    "text": "🔖 Versioning\nWe use Semantic Versioning. Available versions are listed in the tags.",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#authors-and-acknowledgment",
    "href": "index.html#authors-and-acknowledgment",
    "title": "omeka2dsp",
    "section": "✍️ Authors and Acknowledgment",
    "text": "✍️ Authors and Acknowledgment\n\nStadt.Geschichte.Basel – Initial work – Stadt-Geschichte-Basel\nNico Görlich – Initial scripting – koilebeit\n\nSee also the list of contributors.",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "omeka2dsp",
    "section": "📜 License",
    "text": "📜 License\n\nCode: GNU Affero General Public License v3.0 – see LICENSE-AGPL.md\nData: Creative Commons Attribution 4.0 International (CC BY 4.0) – see LICENSE-CCBY.md\n\nBy using this repository, you agree to provide appropriate credit and share modifications under the same license terms.",
    "crumbs": [
      "Home",
      "omeka2dsp"
    ]
  },
  {
    "objectID": "docs/architecture/index.html",
    "href": "docs/architecture/index.html",
    "title": "System Architecture",
    "section": "",
    "text": "The omeka2dsp system is designed as a data migration and synchronization pipeline that transfers cultural heritage data from Omeka (a digital collections platform) to the DaSCH Service Platform (DSP) for long-term preservation.",
    "crumbs": [
      "Home",
      "Documentation",
      "System Architecture"
    ]
  },
  {
    "objectID": "docs/architecture/index.html#overview",
    "href": "docs/architecture/index.html#overview",
    "title": "System Architecture",
    "section": "",
    "text": "The omeka2dsp system is designed as a data migration and synchronization pipeline that transfers cultural heritage data from Omeka (a digital collections platform) to the DaSCH Service Platform (DSP) for long-term preservation.",
    "crumbs": [
      "Home",
      "Documentation",
      "System Architecture"
    ]
  },
  {
    "objectID": "docs/architecture/index.html#high-level-architecture",
    "href": "docs/architecture/index.html#high-level-architecture",
    "title": "System Architecture",
    "section": "High-Level Architecture",
    "text": "High-Level Architecture\n\n\n\n\n\ngraph TB\n    subgraph \"Source System\"\n        A[Omeka Instance]\n        A1[Items API]\n        A2[Media API]\n        A3[Collections API]\n    end\n    \n    subgraph \"Migration Pipeline\"\n        B[Data Extraction]\n        C[Data Transformation]\n        D[Data Validation]\n        E[Upload & Sync]\n    end\n    \n    subgraph \"Target System\"\n        F[DSP Instance]\n        F1[Resources API]\n        F2[Files API]\n        F3[Lists API]\n        F4[Projects API]\n    end\n    \n    subgraph \"Storage\"\n        G[Local File Cache]\n        H[Configuration Files]\n        I[Log Files]\n    end\n    \n    A1 --&gt; B\n    A2 --&gt; B\n    A3 --&gt; B\n    \n    B --&gt; C\n    C --&gt; D\n    D --&gt; E\n    \n    E --&gt; F1\n    E --&gt; F2\n    E --&gt; F3\n    \n    H --&gt; B\n    H --&gt; C\n    H --&gt; E\n    \n    E --&gt; I\n    \n    style A fill:#e1f5fe\n    style F fill:#e8f5e8\n    style B fill:#fff3e0\n    style C fill:#fff3e0\n    style D fill:#fff3e0\n    style E fill:#fff3e0",
    "crumbs": [
      "Home",
      "Documentation",
      "System Architecture"
    ]
  },
  {
    "objectID": "docs/architecture/index.html#core-components",
    "href": "docs/architecture/index.html#core-components",
    "title": "System Architecture",
    "section": "Core Components",
    "text": "Core Components\n\n1. Data Extraction Layer\nModule: process_data_from_omeka.py\nPurpose: Interfaces with Omeka API to retrieve items, media, and metadata.\nKey Functions:\n\nget_items_from_collection() – Retrieves paginated items from collections\nget_media() – Fetches media files associated with items\nextract_property() – Extracts specific metadata properties\nextract_combined_values() – Combines multiple property values\n\nRefer to the API Documentation for more details on these functions.\nArchitecture Pattern: Repository pattern with API abstraction\n\n\n\n\n\nclassDiagram\n    class OmekaExtractor {\n        +get_items_from_collection(collection_id)\n        +get_media(item_id)\n        +extract_property(props, prop_id)\n        +extract_combined_values(props)\n        +get_paginated_items(url, params)\n    }\n    \n    class APIClient {\n        +make_request(endpoint, params)\n        +handle_pagination()\n        +validate_response()\n    }\n    \n    OmekaExtractor --&gt; APIClient\n\n\n\n\n\n\n\n\n2. Data Transformation Layer\nModule: data_2_dasch.py Transformation Functions\nPurpose: Converts Omeka data structures to DSP-compatible formats.\nKey Functions:\n\nconstruct_payload() – Builds DSP resource payloads\nextract_listvalueiri_from_value() – Maps values to DSP list nodes\nspecify_mediaclass() – Determines appropriate DSP media classes\n\nRefer to the API Documentation for more details on these functions.\nArchitecture Pattern: Builder pattern with strategy pattern for different resource types\n\n\n\n\n\nclassDiagram\n    class PayloadBuilder {\n        +construct_payload(item, type, project_iri, lists)\n        +build_metadata_section(item)\n        +build_media_section(item, filename)\n        +map_to_dsp_properties(omeka_properties)\n    }\n    \n    class PropertyMapper {\n        +map_dublin_core(property)\n        +map_custom_properties(property)\n        +extract_list_values(property, lists)\n    }\n    \n    class ResourceTypeStrategy {\n        &lt;&lt;interface&gt;&gt;\n        +build_specific_fields(item)\n    }\n    \n    class ObjectStrategy {\n        +build_specific_fields(item)\n    }\n    \n    class MediaStrategy {\n        +build_specific_fields(item)\n    }\n    \n    PayloadBuilder --&gt; PropertyMapper\n    PayloadBuilder --&gt; ResourceTypeStrategy\n    ResourceTypeStrategy &lt;|-- ObjectStrategy\n    ResourceTypeStrategy &lt;|-- MediaStrategy\n\n\n\n\n\n\n\n\n3. Synchronization Layer (data_2_dasch.py)\nModule: data_2_dasch.py Sync Functions\nPurpose: Handles incremental updates and conflict resolution between systems.\nKey Functions:\n\ncheck_values() – Compares Omeka and DSP data for differences\nsync_value() – Synchronizes single-value properties\nsync_array_value() – Synchronizes multi-value properties\nupdate_value() – Performs actual API updates\n\nRefer to the API Documentation for more details on these functions.\nArchitecture Pattern: Strategy pattern with command pattern for updates\n\n\n\n\n\nclassDiagram\n    class SyncManager {\n        +check_values(dasch_item, omeka_item, lists)\n        +sync_resource(resource_iri, omeka_data)\n        +generate_sync_plan(differences)\n    }\n    \n    class ValueComparator {\n        +compare_text_values(dasch_val, omeka_val)\n        +compare_list_values(dasch_val, omeka_val)\n        +compare_array_values(dasch_arr, omeka_arr)\n    }\n    \n    class UpdateCommand {\n        &lt;&lt;interface&gt;&gt;\n        +execute()\n        +rollback()\n    }\n    \n    class CreateValueCommand {\n        +execute()\n        +rollback()\n    }\n    \n    class DeleteValueCommand {\n        +execute()\n        +rollback()\n    }\n    \n    class UpdateValueCommand {\n        +execute()\n        +rollback()\n    }\n    \n    SyncManager --&gt; ValueComparator\n    SyncManager --&gt; UpdateCommand\n    UpdateCommand &lt;|-- CreateValueCommand\n    UpdateCommand &lt;|-- DeleteValueCommand\n    UpdateCommand &lt;|-- UpdateValueCommand\n\n\n\n\n\n\n\n\n4. Upload & File Management Layer\nModule: data_2_dasch.py File Functions\nPurpose: Manages file uploads and media processing for DSP.\nKey Functions:\n\nupload_file_from_url() – Downloads and uploads files to DSP\ncreate_resource() – Creates new DSP resources\nget_full_resource() – Retrieves complete resource data\n\nRefer to the API Documentation for more details on these functions.",
    "crumbs": [
      "Home",
      "Documentation",
      "System Architecture"
    ]
  },
  {
    "objectID": "docs/architecture/index.html#data-flow-architecture",
    "href": "docs/architecture/index.html#data-flow-architecture",
    "title": "System Architecture",
    "section": "Data Flow Architecture",
    "text": "Data Flow Architecture\n\nProcessing Pipeline\n\n\n\n\n\nflowchart TD\n    Start([Start Migration]) --&gt; Config[Load Configuration]\n    Config --&gt; Auth[Authenticate with DSP]\n    Auth --&gt; FetchOmeka[Fetch Omeka Data]\n    \n    FetchOmeka --&gt; FilterMode{Processing Mode?}\n    FilterMode --&gt;|All Data| AllItems[Process All Items]\n    FilterMode --&gt;|Sample| SampleItems[Process Sample Items]\n    FilterMode --&gt;|Test| TestItems[Process Test Items]\n    \n    AllItems --&gt; ProcessItem[Process Individual Item]\n    SampleItems --&gt; ProcessItem\n    TestItems --&gt; ProcessItem\n    \n    ProcessItem --&gt; CheckExists{Resource Exists in DSP?}\n    \n    CheckExists --&gt;|No| CreateNew[Create New Resource]\n    CheckExists --&gt;|Yes| CompareData[Compare Data]\n    \n    CreateNew --&gt; ProcessMedia[Process Media Files]\n    CompareData --&gt; HasChanges{Has Changes?}\n    \n    HasChanges --&gt;|Yes| UpdateExisting[Update Resource]\n    HasChanges --&gt;|No| ProcessMedia\n    UpdateExisting --&gt; ProcessMedia\n    \n    ProcessMedia --&gt; MoreItems{More Items?}\n    MoreItems --&gt;|Yes| ProcessItem\n    MoreItems --&gt;|No| Complete[Migration Complete]\n    \n    style Start fill:#e8f5e8\n    style Complete fill:#e8f5e8\n    style ProcessItem fill:#fff3e0\n    style CreateNew fill:#e3f2fd\n    style UpdateExisting fill:#fff8e1\n\n\n\n\n\n\n\n\nData Transformation Flow\n\n\n\n\n\nsequenceDiagram\n    participant O as Omeka API\n    participant E as Extractor\n    participant T as Transformer\n    participant V as Validator\n    participant D as DSP API\n    \n    E-&gt;&gt;O: Get Items from Collection\n    O-&gt;&gt;E: Return Item Data\n    \n    loop For each item\n        E-&gt;&gt;O: Get Media for Item\n        O-&gt;&gt;E: Return Media Data\n        \n        E-&gt;&gt;T: Extract & Transform Data\n        T-&gt;&gt;T: Map Dublin Core Properties\n        T-&gt;&gt;T: Build DSP Payload\n        T-&gt;&gt;V: Validate Payload Structure\n        \n        V-&gt;&gt;D: Check if Resource Exists\n        D-&gt;&gt;V: Return Existing Data\n        \n        alt Resource doesn't exist\n            V-&gt;&gt;D: Create New Resource\n            D-&gt;&gt;V: Return Created Resource\n        else Resource exists with changes\n            V-&gt;&gt;D: Update Resource\n            D-&gt;&gt;V: Return Updated Resource\n        end\n        \n        T-&gt;&gt;D: Upload Media Files\n        D-&gt;&gt;T: Confirm Upload\n    end",
    "crumbs": [
      "Home",
      "Documentation",
      "System Architecture"
    ]
  },
  {
    "objectID": "docs/architecture/index.html#configuration-architecture",
    "href": "docs/architecture/index.html#configuration-architecture",
    "title": "System Architecture",
    "section": "Configuration Architecture",
    "text": "Configuration Architecture\n\nEnvironment-Based Configuration\nThe system uses environment variables for configuration, following the 12-factor app methodology:\n\n\n\n\n\ngraph LR\n    subgraph \"Configuration Sources\"\n        A[Environment Variables]\n        B[.env File]\n        C[example.env Template]\n    end\n    \n    subgraph \"Configuration Categories\"\n        D[Omeka API Config]\n        E[DSP API Config]\n        F[Processing Config]\n        G[Authentication Config]\n    end\n    \n    A --&gt; D\n    A --&gt; E\n    A --&gt; F\n    A --&gt; G\n    \n    B --&gt; A\n    C --&gt; B\n    \n    style A fill:#e1f5fe\n    style D fill:#fff3e0\n    style E fill:#e8f5e8\n    style F fill:#fff8e1\n    style G fill:#ffebee\n\n\n\n\n\n\n\n\nConfiguration Categories\n\n\n\n\n\n\n\n\nCategory\nVariables\nPurpose\n\n\n\n\nOmeka API\nOMEKA_API_URL, KEY_IDENTITY, KEY_CREDENTIAL, ITEM_SET_ID\nConnect to source Omeka instance\n\n\nDSP API\nPROJECT_SHORT_CODE, API_HOST, INGEST_HOST\nConnect to target DSP instance\n\n\nAuthentication\nDSP_USER, DSP_PWD\nAuthenticate with DSP\n\n\nProcessing\nPREFIX, NUMBER_RANDOM_OBJECTS, TEST_DATA\nControl processing behavior",
    "crumbs": [
      "Home",
      "Documentation",
      "System Architecture"
    ]
  },
  {
    "objectID": "docs/architecture/index.html#error-handling-architecture",
    "href": "docs/architecture/index.html#error-handling-architecture",
    "title": "System Architecture",
    "section": "Error Handling Architecture",
    "text": "Error Handling Architecture\n\nLogging Strategy\n\n\n\n\n\ngraph TD\n    A[Application Events] --&gt; B[Logger]\n    B --&gt; C[Console Handler]\n    B --&gt; D[File Handler]\n    \n    C --&gt; E[Real-time Monitoring]\n    D --&gt; F[data_2_dasch.log]\n    \n    G[Error Events] --&gt; H[Error Handler]\n    H --&gt; I[Log Error Details]\n    H --&gt; J[Continue Processing]\n    H --&gt; K[Fail Fast for Critical Errors]\n    \n    style G fill:#ffebee\n    style H fill:#ffebee\n    style I fill:#ffebee\n\n\n\n\n\n\n\n\nFault Tolerance\n\nAPI Resilience: Handles rate limiting, timeouts, and temporary failures\nData Validation: Validates data at multiple points in the pipeline\nPartial Recovery: Can resume processing from where it left off\nGraceful Degradation: Continues processing other items if one fails",
    "crumbs": [
      "Home",
      "Documentation",
      "System Architecture"
    ]
  },
  {
    "objectID": "docs/architecture/index.html#performance-architecture",
    "href": "docs/architecture/index.html#performance-architecture",
    "title": "System Architecture",
    "section": "Performance Architecture",
    "text": "Performance Architecture\n\nOptimization Strategies\n\nPagination: Efficiently handles large datasets through API pagination\nCaching: Caches frequently accessed data (projects, lists)\nBatch Processing: Groups operations where possible\nStreaming: Streams large files during upload to minimize memory usage\n\n\n\nScalability Considerations\n\nHorizontal Scaling: Can be containerized and scaled across multiple instances\nRate Limiting: Respects API rate limits to avoid service degradation\nMemory Management: Processes items individually to maintain low memory footprint\nMonitoring: Comprehensive logging for performance monitoring",
    "crumbs": [
      "Home",
      "Documentation",
      "System Architecture"
    ]
  },
  {
    "objectID": "docs/architecture/index.html#security-architecture",
    "href": "docs/architecture/index.html#security-architecture",
    "title": "System Architecture",
    "section": "Security Architecture",
    "text": "Security Architecture\n\nAuthentication Flow\n\n\n\n\n\nsequenceDiagram\n    participant S as Script\n    participant D as DSP API\n    participant O as Omeka API\n    \n    S-&gt;&gt;D: Login Request (username/password)\n    D-&gt;&gt;S: JWT Token\n    \n    Note over S: Store token for session\n    \n    S-&gt;&gt;O: API Request (API keys)\n    O-&gt;&gt;S: Data Response\n    \n    S-&gt;&gt;D: API Request (Bearer token)\n    D-&gt;&gt;S: API Response\n    \n    Note over S: Token expires - re-authenticate\n\n\n\n\n\n\n\n\nSecurity Features\n\nCredential Management: Environment-based credential storage\nToken Handling: Secure JWT token management for DSP API\nHTTPS: All API communications use HTTPS\nAccess Control: Respects API permissions and rate limits",
    "crumbs": [
      "Home",
      "Documentation",
      "System Architecture"
    ]
  },
  {
    "objectID": "docs/guides/installation.html",
    "href": "docs/guides/installation.html",
    "title": "Installation & Setup Guide",
    "section": "",
    "text": "This guide walks you through installing and setting up the omeka2dsp system for data migration from Omeka to DSP.",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#prerequisites",
    "href": "docs/guides/installation.html#prerequisites",
    "title": "Installation & Setup Guide",
    "section": "Prerequisites",
    "text": "Prerequisites\n\nAccess Requirements\nBefore installation, ensure you have:\n\nOmeka API Access:\n\nOmeka instance URL\nAPI key identity and credential\nCollection/item set ID to migrate\n\nDSP Instance Access:\n\nDSP API endpoint URL\nDSP user account with appropriate permissions\nExisting DSP project with data model\n\nPermissions:\n\nRead access to Omeka collections and media\nCreate/update permissions in DSP project\nFile upload permissions to DSP storage",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#installation",
    "href": "docs/guides/installation.html#installation",
    "title": "Installation & Setup Guide",
    "section": "Installation",
    "text": "Installation\nWe recommend using GitHub Codespaces for a reproducible setup.",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#getting-started",
    "href": "docs/guides/installation.html#getting-started",
    "title": "Installation & Setup Guide",
    "section": "Getting Started",
    "text": "Getting Started\n\n🚀 Reproducible Setup with GitHub Codespaces (Most Users)👩‍💻 Local Installation (Advanced)\n\n\n\nFork or clone this repository to your GitHub account.\nClick the green &lt;&gt; Code button at the top right of this repository.\nSelect the “Codespaces” tab and click “Create codespace on main”. GitHub will now build a container that includes:\n\n✅ Python with uv\n✅ Node.js with pnpm\n✅ All project dependencies pre-installed\n\nOnce the Codespace is ready, configure your environment:\n# Copy example environment file\ncp example.env .env\n# Edit .env with your credentials using the built-in editor\nTest the installation:\n# Test Omeka API access\nuv run python scripts/api_get_project.py\n\n\nNote: All dependencies (Python via uv, Node.js via pnpm) are pre-installed in the Codespace.\n\n\n\n\nPrerequisites\n\nuv (Python manager)\npnpm\nNode.js (latest LTS)\n\n\nNote: uv installs and manages the correct Python version automatically.\n\n\n\nLocal Setup Steps\n# 1. Clone repository\ngit clone https://github.com/Stadt-Geschichte-Basel/omeka2dsp.git\ncd omeka2dsp\n\n# 2. Install Node.js dependencies\npnpm install\npnpm run prepare\n\n# 3. Setup Python environment\nuv sync\n\n# 4. Configure environment\ncp example.env .env\n# Edit .env with your specific settings\n\n# 5. Test installation\nuv run python scripts/api_get_project.py",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#configuration",
    "href": "docs/guides/installation.html#configuration",
    "title": "Installation & Setup Guide",
    "section": "Configuration",
    "text": "Configuration\n\n1. Environment File Setup\nConfigure your environment variables:\n# Copy example environment file\ncp example.env .env\n\n\n2. Edit Environment Variables\nUpdate the .env file with your specific settings:\n# Omeka Configuration\nOMEKA_API_URL=https://omeka.unibe.ch/api/\nKEY_IDENTITY=your_api_key_identity\nKEY_CREDENTIAL=your_api_key_credential\nITEM_SET_ID=your_collection_id\n\n# DSP Configuration\nPROJECT_SHORT_CODE=0712\nAPI_HOST=https://api.dasch.swiss\nINGEST_HOST=https://ingest.dasch.swiss\nDSP_USER=your_dsp_username\nDSP_PWD=your_dsp_password\n\n# Optional Configuration\nPREFIX=StadtGeschichteBasel_v1:\n\n\n3. Validate Configuration\nTest your configuration with a simple API call:\n# Test Omeka API access\nuv run python scripts/api_get_project.py\n\n# Expected output: Project information saved to ../data/project_data.json",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#dsp-project-setup",
    "href": "docs/guides/installation.html#dsp-project-setup",
    "title": "Installation & Setup Guide",
    "section": "DSP Project Setup",
    "text": "DSP Project Setup\n\n1. Data Model Requirements\nYour DSP project must have a compatible data model. The system expects:\n\nRequired Resource Classes:\n\nsgb_OBJECT: Main metadata objects\nsgb_MEDIA_IMAGE: Image files\nsgb_MEDIA_ARCHIV: Archive files (PDFs, documents)\n\n\n\nRequired Properties:\n\nidentifier: Unique item identifier\ntitle: Resource title\ndescription: Resource description\ncreator: Creator information\ndate: Date information\nsubject: Subject classifications\ntype: Resource type (mapped to lists)\nformat: File format (mapped to lists)\nlanguage: Language (mapped to lists)\n\n\n\n\n2. Create Data Model\nIf you need to create the data model, use the provided JSON:\n# Using DSP-Tools (requires system administrator rights)\ndsp-tools create -s your-dsp-host -u admin@example.com -p password data/data_model_dasch.json\n\n\n3. Verify Lists Setup\nEnsure your project has the required value lists:\n# Fetch current lists\nuv run python scripts/api_get_lists.py\n\n# Get detailed list information\nuv run python scripts/api_get_lists_detailed.py\n\n# Verify lists in data/data_lists_detail.json\nRequired lists include:\n\nDCMI Type Vocabulary: For resource types\nInternet Media Type: For file formats\nISO 639 Language Codes: For languages",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#directory-structure-setup",
    "href": "docs/guides/installation.html#directory-structure-setup",
    "title": "Installation & Setup Guide",
    "section": "Directory Structure Setup",
    "text": "Directory Structure Setup\nThe system expects the following directory structure:\nomeka2dsp/\n├── data/                          # Configuration and cache files\n│   ├── data_model_dasch.json      # DSP data model definition\n│   ├── data_lists.json            # DSP lists summary (generated)\n│   ├── data_lists_detail.json     # Detailed lists (generated)\n│   ├── project_data.json          # Project info (generated)\n│   └── media_files/               # Downloaded media cache\n├── docs/                          # Documentation\n├── scripts/                       # Python scripts\n│   ├── data_2_dasch.py            # Main migration script\n│   ├── process_data_from_omeka.py # Omeka API utilities\n│   ├── api_get_project.py         # Project info fetcher\n│   ├── api_get_lists.py           # Lists fetcher\n│   └── api_get_lists_detailed.py  # Detailed lists fetcher\n├── .env                           # Environment configuration\n├── .gitignore                     # Git ignore rules\n├── README.md                      # Basic documentation\n└── requirements.txt               # Python dependencies (if created)\nCreate any missing directories, e.g.:\nmkdir -p data/media_files\nmkdir -p logs",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#verification-steps",
    "href": "docs/guides/installation.html#verification-steps",
    "title": "Installation & Setup Guide",
    "section": "Verification Steps",
    "text": "Verification Steps\n\n1. Test Omeka Connection\nuv run python -c \"\nimport os\nimport requests\nfrom scripts.process_data_from_omeka import get_items_from_collection\n\n# Load environment\nfrom dotenv import load_dotenv\nload_dotenv()\n\ntry:\n    items = get_items_from_collection(os.getenv('ITEM_SET_ID'))[:5]\n    print(f'Successfully connected to Omeka. Found {len(items)} test items.')\nexcept Exception as e:\n    print(f'Omeka connection failed: {e}')\n\"\n\n\n2. Test DSP Authentication\nuv run python -c \"\nimport os\nfrom scripts.data_2_dasch import login\n\ntry:\n    token = login(os.getenv('DSP_USER'), os.getenv('DSP_PWD'))\n    print('DSP authentication successful')\nexcept Exception as e:\n    print(f'DSP authentication failed: {e}')\n\"\n\n\n3. Verify Project Setup\nuv run python -c \"\nimport os\nfrom scripts.data_2_dasch import login, get_project, get_lists\n\ntry:\n    token = login(os.getenv('DSP_USER'), os.getenv('DSP_PWD'))\n    project_iri = get_project()\n    lists = get_lists(project_iri)\n    print(f'Project setup verified. Found {len(lists)} lists.')\nexcept Exception as e:\n    print(f'Project verification failed: {e}')\n\"",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#common-installation-issues",
    "href": "docs/guides/installation.html#common-installation-issues",
    "title": "Installation & Setup Guide",
    "section": "Common Installation Issues",
    "text": "Common Installation Issues\n\nPython Import Errors\nIssue: ModuleNotFoundError: No module named 'requests'\nSolution:\n# Ensure dependencies are installed via uv\nuv sync\n\n\nEnvironment Variable Issues\nIssue: KeyError: 'PROJECT_SHORT_CODE'\nSolution:\n# Check .env file exists and contains required variables\ncat .env | grep PROJECT_SHORT_CODE\n\n# Load environment variables if using a different shell\nexport $(cat .env | xargs)\n\n\nAPI Connection Issues\nIssue: Connection timeouts or SSL errors\nSolutions:\n# Test basic connectivity\ncurl -k https://your-dsp-host.com/health\n\n# Check firewall and proxy settings\nexport HTTP_PROXY=http://proxy.example.com:8080\nexport HTTPS_PROXY=https://proxy.example.com:8080\n\n\nPermission Issues\nIssue: DSP API returns 403 Forbidden\nSolution:\n\nVerify user account has correct project permissions\nCheck if user account is active and not locked\nConfirm API endpoints are correct\n\n\n\nFile System Permissions\nIssue: Cannot write to data directory\nSolution:\n# Fix directory permissions\nchmod 755 data/\nmkdir -p data/media_files\nchmod 755 data/media_files",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#development-environment-setup",
    "href": "docs/guides/installation.html#development-environment-setup",
    "title": "Installation & Setup Guide",
    "section": "Development Environment Setup",
    "text": "Development Environment Setup\nFor development and contribution:\n\n1. Install Development Tools\n# Install pre-commit hooks\npnpm install\npnpm run prepare\n\n# Install Python development tools (if available)\nuv sync --dev\n\n\n2. Code Formatting\n# Check code formatting\npnpm run check\n\n# Auto-format code\npnpm run format\n\n\n3. Commit Standards\n# Use conventional commits\npnpm run commit\n\n# Or use git directly with conventional format\ngit commit -m \"feat: add new synchronization feature\"",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#performance-optimization",
    "href": "docs/guides/installation.html#performance-optimization",
    "title": "Installation & Setup Guide",
    "section": "Performance Optimization",
    "text": "Performance Optimization\n\n1. Large Dataset Handling\nFor large collections (&gt;1000 items):\n# Use sample mode for testing\nuv run python scripts/data_2_dasch.py -m sample_data\n\n# Process in smaller batches\n# Edit NUMBER_RANDOM_OBJECTS in data_2_dasch.py\n\n\n2. Memory Management\n# Monitor memory usage during processing\nhtop\n\n# For very large datasets, consider running on a server with more RAM\n\n\n3. Network Optimization\n# For slow connections, increase timeout values in scripts\n# Edit timeout parameters in API calls",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#security-considerations",
    "href": "docs/guides/installation.html#security-considerations",
    "title": "Installation & Setup Guide",
    "section": "Security Considerations",
    "text": "Security Considerations\n\n1. Credential Management\n\nNever commit .env file to version control\nUse secure credential storage for production\nRotate API keys regularly\n\n\n\n2. File Permissions\n# Secure environment file\nchmod 600 .env\n\n# Secure log files\nchmod 600 *.log\n\n\n3. Network Security\n\nUse HTTPS for all API communications\nConsider VPN for sensitive data transfers\nMonitor API access logs",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#next-steps",
    "href": "docs/guides/installation.html#next-steps",
    "title": "Installation & Setup Guide",
    "section": "Next Steps",
    "text": "Next Steps\nAfter successful installation:\n\nRead the Configuration Guide for detailed configuration options\nFollow the Usage Guide for running your first migration\nReview the Architecture Documentation to understand the system\nCheck the Troubleshooting Guide for common issues",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/installation.html#support",
    "href": "docs/guides/installation.html#support",
    "title": "Installation & Setup Guide",
    "section": "Support",
    "text": "Support\nIf you encounter issues during installation:\n\nCheck the Troubleshooting Guide\nReview the logs in data_2_dasch.log\nCreate an issue on the GitHub repository\nInclude system information, error messages, and configuration details (without sensitive data)\n\nInstallation is now complete! You’re ready to configure and run your first data migration.",
    "crumbs": [
      "Home",
      "Guides",
      "Installation & Setup"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html",
    "href": "docs/guides/configuration.html",
    "title": "Configuration Guide",
    "section": "",
    "text": "Comprehensive guide to configuring the omeka2dsp system for your specific migration requirements. Customize the omeka2dsp system for your project while maintaining security and performance best practices.",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html#environment-variables",
    "href": "docs/guides/configuration.html#environment-variables",
    "title": "Configuration Guide",
    "section": "Environment Variables",
    "text": "Environment Variables\nThe system uses environment variables for configuration, following the 12-factor app methodology for maintainability and security.\n\nCore Configuration\n\nOmeka API Configuration\n# Omeka instance API endpoint\nOMEKA_API_URL=https://omeka.unibe.ch/api/\n\n# API authentication credentials\nKEY_IDENTITY=your_api_key_identity\nKEY_CREDENTIAL=your_api_key_credential\n\n# Collection to migrate (item set ID)\nITEM_SET_ID=10780\nGetting Omeka Credentials:\n\nLog into your Omeka admin panel\nNavigate to User settings → API keys\nCreate a new API key\nCopy the Identity and Credential values\n\nFinding Collection ID:\n\nIn Omeka admin, go to Item sets\nClick on your collection\nThe ID is in the URL: /admin/item-sets/show/{ID}\n\n\n\nDSP API Configuration\n# DSP project identifier (shortcode)\nPROJECT_SHORT_CODE=0712\n\n# DSP API endpoints\nAPI_HOST=https://api.dasch.swiss\nINGEST_HOST=https://ingest.dasch.swiss\n\n# DSP user credentials\nDSP_USER=your.email@example.com\nDSP_PWD=your_secure_password\n\n# Ontology prefix (default works for most cases)\nPREFIX=StadtGeschichteBasel_v1:\nDSP Configuration Notes:\n\nPROJECT_SHORT_CODE: 4-character alphanumeric project identifier\nAPI_HOST: Main DSP API endpoint (varies by instance)\nINGEST_HOST: File upload service endpoint\nPREFIX: Must match your DSP ontology namespace\n\n\n\n\nEnvironment File Template\nTo Create .env from template:\n# Copy example configuration\ncp example.env .env\n\n# Edit with your specific values\nnano .env\nThe complete .env template will look like this (replace with values for your project):\n# ===========================================\n# OMEKA CONFIGURATION\n# ===========================================\n\n# Omeka API base URL (with trailing slash)\nOMEKA_API_URL=https://omeka.unibe.ch/api/\n\n# Omeka API credentials (from User Settings &gt; API Keys)\nKEY_IDENTITY=your_api_key_identity\nKEY_CREDENTIAL=your_api_key_identity_credential\n\n# Item Set ID to migrate (numeric ID from Omeka)\nITEM_SET_ID=10780\n\n# ===========================================\n# DSP CONFIGURATION\n# ===========================================\n\n# DSP project shortcode (4 characters)\nPROJECT_SHORT_CODE=0712\n\n# DSP API endpoints\nAPI_HOST=https://api.dasch.swiss\nINGEST_HOST=https://ingest.dasch.swiss\n\n# DSP user credentials\nDSP_USER=username@example.com\nDSP_PWD=secure_password_here\n\n# Ontology prefix (usually don't change)\nPREFIX=StadtGeschichteBasel_v1:\n\n# ===========================================\n# OPTIONAL CONFIGURATION\n# ===========================================\n\n# Custom timeout for API requests (seconds)\nAPI_TIMEOUT=30\n\n# Enable debug logging (true/false)\nDEBUG_MODE=false\n\n# Maximum retry attempts for failed requests\nMAX_RETRIES=3",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html#processing-configuration",
    "href": "docs/guides/configuration.html#processing-configuration",
    "title": "Configuration Guide",
    "section": "Processing Configuration",
    "text": "Processing Configuration\nControl how the migration processes data by modifying constants in scripts/data_2_dasch.py.\n\nProcessing Modes\nThe system supports three processing modes:\n# Edit these constants in data_2_dasch.py\n\n# Number of random items for sample mode\nNUMBER_RANDOM_OBJECTS = 5\n\n# Specific items for test mode\nTEST_DATA = {\n    'abb13025',  # Historic painting\n    'abb14375',  # Map with Geodata\n    'abb41033',  # Map\n    'abb11536',  # Photograph\n    'abb28998'   # Map\n}\n\nMode Configuration\n\n\n\n\n\n\n\n\nMode\nConfiguration\nUse Case\n\n\n\n\nall_data\nUses ITEM_SET_ID\nFull production migration\n\n\nsample_data\nUses NUMBER_RANDOM_OBJECTS\nTesting with subset\n\n\ntest_data\nUses TEST_DATA identifiers\nDevelopment and debugging\n\n\n\n\n\n\nBatch Processing Configuration\nFor large datasets, configure batch processing:\n# Add these constants to data_2_dasch.py\n\n# Process items in batches\nBATCH_SIZE = 50\n\n# Delay between batches (seconds)\nBATCH_DELAY = 2\n\n# Maximum items per session\nMAX_ITEMS_PER_SESSION = 1000\n\n\nRetry Configuration\nConfigure retry behavior for API failures:\n# Retry configuration\nMAX_RETRIES = 3\nRETRY_DELAY = 5  # seconds\nEXPONENTIAL_BACKOFF = True",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html#data-mapping-configuration",
    "href": "docs/guides/configuration.html#data-mapping-configuration",
    "title": "Configuration Guide",
    "section": "Data Mapping Configuration",
    "text": "Data Mapping Configuration\n\nProperty Mapping\nThe system maps Omeka Dublin Core properties to DSP properties. Customize mappings in the construct_payload() function:\n# Property ID mappings (edit in construct_payload function)\nPROPERTY_MAPPINGS = {\n    'title': 1,         # dcterms:title\n    'creator': 2,       # dcterms:creator\n    'subject': 3,       # dcterms:subject\n    'description': 4,   # dcterms:description\n    'publisher': 5,     # dcterms:publisher\n    'contributor': 6,   # dcterms:contributor\n    'date': 7,          # dcterms:date\n    'type': 8,          # dcterms:type\n    'format': 9,        # dcterms:format\n    'identifier': 10,   # dcterms:identifier\n    'source': 11,       # dcterms:source\n    'language': 12,     # dcterms:language\n    'relation': 13,     # dcterms:relation\n    'coverage': 14,     # dcterms:coverage\n    'rights': 15,       # dcterms:rights\n}\n\n\nList Value Mappings\nConfigure how Omeka values map to DSP list nodes:\n{\n  \"list_mappings\": {\n    \"DCMI Type Vocabulary\": {\n      \"Image\": \"image\",\n      \"Text\": \"text\", \n      \"Collection\": \"collection\",\n      \"Interactive Resource\": \"interactive\"\n    },\n    \"Internet Media Type\": {\n      \"image/jpeg\": \"image-jpeg\",\n      \"image/png\": \"image-png\",\n      \"application/pdf\": \"application-pdf\",\n      \"text/plain\": \"text-plain\"\n    },\n    \"ISO 639 Language Codes\": {\n      \"German\": \"de\",\n      \"English\": \"en\", \n      \"French\": \"fr\",\n      \"Italian\": \"it\"\n    }\n  }\n}\n\n\nResource Class Mappings\nConfigure DSP resource classes for different content types:\n# Resource class configuration\nRESOURCE_CLASSES = {\n    'metadata': f'{PREFIX}sgb_OBJECT',\n    'image': f'{PREFIX}sgb_MEDIA_IMAGE',\n    'document': f'{PREFIX}sgb_MEDIA_ARCHIV',\n    'audio': f'{PREFIX}sgb_MEDIA_ARCHIV',\n    'video': f'{PREFIX}sgb_MEDIA_ARCHIV'\n}\n\n# Media type to class mapping\nMEDIA_TYPE_MAPPING = {\n    'image/jpeg': 'image',\n    'image/png': 'image',\n    'image/gif': 'image',\n    'image/tiff': 'image',\n    'application/pdf': 'document',\n    'text/plain': 'document',\n    'text/html': 'document',\n    'application/zip': 'document',\n    'audio/mpeg': 'audio',\n    'video/mp4': 'video'\n}",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html#performance-tuning",
    "href": "docs/guides/configuration.html#performance-tuning",
    "title": "Configuration Guide",
    "section": "Performance Tuning",
    "text": "Performance Tuning\n\nAPI Request Configuration\nOptimize API performance:\n# API configuration constants\nAPI_TIMEOUT = 30        # Request timeout in seconds\nAPI_BATCH_SIZE = 100    # Items per API request\nAPI_RATE_LIMIT = 10     # Requests per second\nAPI_RETRY_ATTEMPTS = 3  # Retry failed requests\n\n# Connection pooling\nREQUESTS_SESSION_CONFIG = {\n    'pool_connections': 10,\n    'pool_maxsize': 20,\n    'max_retries': 3\n}\n\n\nFile Upload Configuration\nConfigure file handling:\n# File upload settings\nMAX_FILE_SIZE = 100 * 1024 * 1024  # 100MB\nUPLOAD_CHUNK_SIZE = 8192            # 8KB chunks\nCOMPRESS_THRESHOLD = 10 * 1024 * 1024  # 10MB\nSUPPORTED_FORMATS = [\n    'image/jpeg', 'image/png', 'image/tiff',\n    'application/pdf', 'text/plain', 'application/zip'\n]\n\n\nMemory Management\nConfigure memory usage:\n# Memory management\nMEMORY_LIMIT = 1024 * 1024 * 1024  # 1GB\nCACHE_SIZE = 1000                  # Items to cache\nTEMP_DIR = '/tmp/omeka2dsp'        # Temporary file directory\nCLEANUP_TEMP_FILES = True          # Clean up after processing\n\n\nLogging Configuration\nCustomize logging behavior:\n# Logging configuration\nLOG_LEVEL = 'INFO'  # DEBUG, INFO, WARNING, ERROR, CRITICAL\nLOG_FORMAT = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'\nLOG_FILE = 'data_2_dasch.log'\nMAX_LOG_SIZE = 10 * 1024 * 1024  # 10MB\nLOG_BACKUP_COUNT = 5\n\n# Console and file logging\nCONSOLE_LOGGING = True\nFILE_LOGGING = True",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html#security-configuration",
    "href": "docs/guides/configuration.html#security-configuration",
    "title": "Configuration Guide",
    "section": "Security Configuration",
    "text": "Security Configuration\n\nCredential Security\nSecure credential handling:\n# File permissions for .env\nchmod 600 .env\n\n# Secure log files\nchmod 600 *.log\n\n# Use secure environment variable loading\n# Never commit .env to version control\necho \".env\" &gt;&gt; .gitignore\n\n\nAPI Security\nConfigure secure API communications:\n# Security settings\nVERIFY_SSL = True             # Verify SSL certificates\nUSER_AGENT = 'omeka2dsp/1.0'  # Identify requests\nREQUEST_TIMEOUT = 30          # Prevent hanging requests\n\n# Headers for security\nSECURITY_HEADERS = {\n    'User-Agent': USER_AGENT,\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n}\n\n\nAccess Control\nConfigure access permissions:\n# Required permissions check\nREQUIRED_OMEKA_PERMISSIONS = [\n    'read_items',\n    'read_media',\n    'read_collections'\n]\n\nREQUIRED_DSP_PERMISSIONS = [\n    'create_resources',\n    'update_resources',\n    'upload_files'\n]",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html#advanced-configuration",
    "href": "docs/guides/configuration.html#advanced-configuration",
    "title": "Configuration Guide",
    "section": "Advanced Configuration",
    "text": "Advanced Configuration\n\nCustom Property Extractors\nCreate custom extractors for special properties:\ndef extract_custom_property(item, property_name):\n    \"\"\"Custom property extraction logic\"\"\"\n    props = item.get(property_name, [])\n    \n    # Custom processing logic here\n    for prop in props:\n        if prop.get('property_id') == CUSTOM_PROPERTY_ID:\n            return process_custom_value(prop)\n    \n    return \"\"\n\n# Register custom extractors\nCUSTOM_EXTRACTORS = {\n    'custom:field': extract_custom_property,\n    'custom:date': extract_custom_date,\n    'custom:geo': extract_geo_coordinates\n}\n\n\nValidation Rules\nConfigure data validation:\n# Validation configuration\nVALIDATION_RULES = {\n    'required_fields': ['identifier', 'title'],\n    'max_length': {\n        'title': 255,\n        'description': 5000,\n        'identifier': 50\n    },\n    'patterns': {\n        'identifier': r'^[a-zA-Z0-9_-]+$',\n        'email': r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$'\n    }\n}\n\n\nTransformation Rules\nConfigure data transformation:\n# Data transformation rules\nTRANSFORMATION_RULES = {\n    'text_cleanup': {\n        'remove_html': True,\n        'normalize_whitespace': True,\n        'max_length': 1000\n    },\n    'date_formatting': {\n        'input_formats': ['%Y-%m-%d', '%d.%m.%Y', '%Y'],\n        'output_format': '%Y-%m-%d'\n    },\n    'url_validation': {\n        'schemes': ['http', 'https'],\n        'require_domain': True\n    }\n}\n\n\nError Handling Configuration\nConfigure error handling behavior:\n# Error handling configuration\nERROR_CONFIG = {\n    'continue_on_error': True,        # Continue processing after errors\n    'max_errors': 10,                 # Stop after N errors\n    'error_report_file': 'errors.log',\n    'skip_invalid_items': True,       # Skip items that fail validation\n    'retry_on_network_error': True,   # Retry network failures\n    'email_on_critical_error': False  # Email notifications\n}",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html#configuration-validation",
    "href": "docs/guides/configuration.html#configuration-validation",
    "title": "Configuration Guide",
    "section": "Configuration Validation",
    "text": "Configuration Validation\nValidate your configuration before running:\n# Configuration validation script\ndef validate_configuration():\n    \"\"\"Validate all configuration settings\"\"\"\n    errors = []\n    \n    # Check required environment variables\n    required_vars = [\n        'OMEKA_API_URL', 'KEY_IDENTITY', 'KEY_CREDENTIAL',\n        'PROJECT_SHORT_CODE', 'API_HOST', 'DSP_USER', 'DSP_PWD'\n    ]\n    \n    for var in required_vars:\n        if not os.getenv(var):\n            errors.append(f\"Missing required environment variable: {var}\")\n    \n    # Check API connectivity\n    try:\n        test_omeka_connection()\n        test_dsp_connection()\n    except Exception as e:\n        errors.append(f\"API connection failed: {e}\")\n    \n    # Check file permissions\n    if not os.access('.env', os.R_OK):\n        errors.append(\"Cannot read .env file\")\n    \n    return errors\n\n# Run validation\nif __name__ == '__main__':\n    errors = validate_configuration()\n    if errors:\n        print(\"Configuration errors found:\")\n        for error in errors:\n            print(f\"  - {error}\")\n    else:\n        print(\"Configuration validation passed!\")\nRun validation:\nuv run python scripts/validate_config.py",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html#environment-specific-configurations",
    "href": "docs/guides/configuration.html#environment-specific-configurations",
    "title": "Configuration Guide",
    "section": "Environment-Specific Configurations",
    "text": "Environment-Specific Configurations\n\nDevelopment Configuration\n# .env.development\nDEBUG_MODE=true\nLOG_LEVEL=DEBUG\nAPI_TIMEOUT=60\nNUMBER_RANDOM_OBJECTS=2\nVERIFY_SSL=false  # For local development only\n\n\nStaging Configuration\n# .env.staging\nDEBUG_MODE=false\nLOG_LEVEL=INFO\nAPI_TIMEOUT=30\nNUMBER_RANDOM_OBJECTS=10\nVERIFY_SSL=true\n\n\nProduction Configuration\n# .env.production\nDEBUG_MODE=false\nLOG_LEVEL=WARNING\nAPI_TIMEOUT=30\nVERIFY_SSL=true\nMAX_RETRIES=5\nBATCH_SIZE=100",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/configuration.html#configuration-management",
    "href": "docs/guides/configuration.html#configuration-management",
    "title": "Configuration Guide",
    "section": "Configuration Management",
    "text": "Configuration Management\n\nUsing Configuration Files\nFor complex setups, use JSON configuration files:\n{\n  \"migration_config\": {\n    \"processing\": {\n      \"mode\": \"all_data\",\n      \"batch_size\": 50,\n      \"concurrent_uploads\": 3\n    },\n    \"mapping\": {\n      \"property_mappings\": {},\n      \"list_mappings\": {},\n      \"custom_transformations\": {}\n    },\n    \"performance\": {\n      \"api_timeout\": 30,\n      \"retry_attempts\": 3,\n      \"rate_limit\": 10\n    }\n  }\n}\nLoad configuration in Python:\nimport json\n\ndef load_config(config_file='config.json'):\n    \"\"\"Load configuration from JSON file\"\"\"\n    with open(config_file, 'r') as f:\n        return json.load(f)\n\n# Use in main script\nconfig = load_config()\nBATCH_SIZE = config['migration_config']['processing']['batch_size']",
    "crumbs": [
      "Home",
      "Guides",
      "Configuration"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html",
    "href": "docs/guides/troubleshooting.html",
    "title": "Troubleshooting Guide",
    "section": "",
    "text": "Common issues and solutions for the omeka2dsp system.",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html#quick-diagnostics",
    "href": "docs/guides/troubleshooting.html#quick-diagnostics",
    "title": "Troubleshooting Guide",
    "section": "Quick Diagnostics",
    "text": "Quick Diagnostics\n\nSystem Health Check\nRun this comprehensive health check to identify common issues:\n#!/bin/bash\n# health_check.sh\necho \"=== omeka2dsp Health Check ===\"\n\n# Check Python version\necho \"Python version:\"\npython --version\n\n# Check required modules\necho -e \"\\nChecking Python modules:\"\npython -c \"import requests; print('✓ requests module available')\" || echo \"✗ requests module missing\"\npython -c \"import json; print('✓ json module available')\" || echo \"✗ json module missing\"\n\n# Check environment file\necho -e \"\\nChecking configuration:\"\nif [ -f \".env\" ]; then\n    echo \"✓ .env file exists\"\n    \n    # Check required variables\n    source .env\n    [ -n \"$OMEKA_API_URL\" ] && echo \"✓ OMEKA_API_URL set\" || echo \"✗ OMEKA_API_URL missing\"\n    [ -n \"$DSP_USER\" ] && echo \"✓ DSP_USER set\" || echo \"✗ DSP_USER missing\"\n    [ -n \"$PROJECT_SHORT_CODE\" ] && echo \"✓ PROJECT_SHORT_CODE set\" || echo \"✗ PROJECT_SHORT_CODE missing\"\nelse\n    echo \"✗ .env file missing\"\nfi\n\n# Check network connectivity\necho -e \"\\nChecking network connectivity:\"\ncurl -s --connect-timeout 5 https://api.dasch.swiss/health &gt; /dev/null && echo \"✓ DSP API reachable\" || echo \"✗ DSP API not reachable\"\n\n# Check directory structure\necho -e \"\\nChecking directory structure:\"\n[ -d \"data\" ] && echo \"✓ data directory exists\" || echo \"✗ data directory missing\"\n[ -d \"scripts\" ] && echo \"✓ scripts directory exists\" || echo \"✗ scripts directory missing\"\n\n# Check permissions\necho -e \"\\nChecking permissions:\"\n[ -w \".\" ] && echo \"✓ Current directory writable\" || echo \"✗ Current directory not writable\"\n[ -w \"data\" ] && echo \"✓ Data directory writable\" || echo \"✗ Data directory not writable\"\n\necho -e \"\\n=== Health Check Complete ===\"\nRun the health check:\nchmod +x health_check.sh\n./health_check.sh\n\n\nLog Analysis Script\nQuickly analyze log files for common issues:\n#!/bin/bash\n# analyze_logs.sh\necho \"=== Log Analysis ===\"\n\nif [ -f \"data_2_dasch.log\" ]; then\n    echo \"Errors found:\"\n    grep -c \"ERROR\" data_2_dasch.log\n    \n    echo -e \"\\nMost recent errors:\"\n    grep \"ERROR\" data_2_dasch.log | tail -5\n    \n    echo -e \"\\nSuccess statistics:\"\n    echo \"Items processed: $(grep -c 'Processing item:' data_2_dasch.log)\"\n    echo \"Resources created: $(grep -c 'Resource created successfully' data_2_dasch.log)\"\n    echo \"Resources updated: $(grep -c 'Resource updated successfully' data_2_dasch.log)\"\n    \n    echo -e \"\\nCommon issues:\"\n    grep -c \"Authentication failed\" data_2_dasch.log && echo \"- Authentication failures detected\"\n    grep -c \"Network timeout\" data_2_dasch.log && echo \"- Network timeout issues detected\"\n    grep -c \"File not found\" data_2_dasch.log && echo \"- Missing file issues detected\"\nelse\n    echo \"No log file found (data_2_dasch.log)\"\nfi",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html#authentication-issues",
    "href": "docs/guides/troubleshooting.html#authentication-issues",
    "title": "Troubleshooting Guide",
    "section": "Authentication Issues",
    "text": "Authentication Issues\n\nIssue: “Authentication failed” or “Login unsuccessful”\nSymptoms:\n\n\n\n\n\n\nERROR - Authentication failed\nERROR - Failed to retrieve project. Status code: 401\n\n\n\nDiagnostic Steps:\n\nVerify Credentials\n# Test credentials manually\npython -c \"\nimport os, requests\nresponse = requests.post('$API_HOST/v2/authentication', \n    json={'email': '$DSP_USER', 'password': '$DSP_PWD'})\nprint(f'Status: {response.status_code}')\nprint(f'Response: {response.text}')\n\"\nCheck Account Status\n\nVerify account is not locked\nConfirm account has necessary permissions\nCheck if password has expired\n\n\nSolutions:\n\n\n\n\n\n\n\nProblem\nSolution\n\n\n\n\nInvalid credentials\nUpdate .env with correct username/password\n\n\nAccount locked\nContact DSP administrator to unlock\n\n\nPassword expired\nReset password through DSP interface\n\n\nInsufficient permissions\nRequest project access from administrator\n\n\nWrong API endpoint\nVerify API_HOST in configuration\n\n\n\n\n\nIssue: “Token expired” during migration\nSymptoms:\n\n\n\n\n\n\nERROR - Request failed with status 401\nWARNING - Token may have expired\n\n\n\nSolutions:\n\nIncrease Token Lifetime (if possible)\n# Add token refresh logic to data_2_dasch.py\ndef refresh_token_if_needed(token):\n    # Check token expiration\n    # Re-authenticate if necessary\n    pass\nImplement Auto-Retry\n# Add retry with re-authentication\ndef api_call_with_retry(url, token, max_retries=3):\n    for attempt in range(max_retries):\n        try:\n            response = requests.get(url, headers={'Authorization': f'Bearer {token}'})\n            if response.status_code == 401 and attempt &lt; max_retries - 1:\n                token = login(DSP_USER, DSP_PWD)  # Re-authenticate\n                continue\n            return response\n        except Exception as e:\n            if attempt == max_retries - 1:\n                raise\n    return None",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html#network-and-connectivity",
    "href": "docs/guides/troubleshooting.html#network-and-connectivity",
    "title": "Troubleshooting Guide",
    "section": "Network and Connectivity",
    "text": "Network and Connectivity\n\nIssue: Connection timeouts or network errors\nSymptoms:\n\n\n\n\n\n\nERROR - Connection timeout\nERROR - Network unreachable\nrequests.exceptions.ConnectionError\n\n\n\nDiagnostic Steps:\n\nTest Basic Connectivity\n# Test DSP API\ncurl -v https://api.dasch.swiss/health\n\n# Test Omeka API\ncurl -v \"$OMEKA_API_URL\"\n\n# Check DNS resolution\nnslookup api.dasch.swiss\nTest API Endpoints\n# Test specific endpoints\ncurl -X POST https://api.dasch.swiss/v2/authentication \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"email\":\"test\",\"password\":\"test\"}'\n\nSolutions:\n\n\n\n\n\n\n\nProblem\nSolution\n\n\n\n\nFirewall blocking\nConfigure firewall to allow HTTPS (443)\n\n\nProxy issues\nSet HTTP_PROXY and HTTPS_PROXY variables\n\n\nDNS issues\nUse IP addresses or different DNS servers\n\n\nSSL certificate problems\nUpdate certificates or bypass verification (testing only)\n\n\nNetwork instability\nIncrease timeout values, implement retry logic\n\n\n\n\n\nIssue: SSL Certificate Verification Failed\nSymptoms:\n\n\n\n\n\n\nrequests.exceptions.SSLError: certificate verify failed\n\n\n\nSolutions:\n\nUpdate Certificates\n# Update system certificates\nsudo apt-get update && sudo apt-get install ca-certificates\n\n# Or on macOS\nbrew install ca-certificates\nTemporary Bypass (development only)\n# Add SSL verification bypass\nimport requests\nrequests.packages.urllib3.disable_warnings()\n\n# In API calls, add verify=False\nresponse = requests.get(url, verify=False)",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html#data-processing-errors",
    "href": "docs/guides/troubleshooting.html#data-processing-errors",
    "title": "Troubleshooting Guide",
    "section": "Data Processing Errors",
    "text": "Data Processing Errors\n\nIssue: “KeyError” or missing property errors\nSymptoms:\n\n\n\n\n\n\nKeyError: 'dcterms:title'\nERROR - Required field missing\n\n\n\nDiagnostic Steps:\n\nInspect Problematic Item\n# Debug specific item\nfrom scripts.process_data_from_omeka import get_items_from_collection\nimport json\n\nitems = get_items_from_collection('10780') # SGB Item Set ID\nproblem_item = items[0]  # Adjust index as needed\nprint(json.dumps(problem_item, indent=2))\nCheck Property Mappings\n# Verify property structure\nitem = get_problem_item()\nprint(\"Available properties:\")\nfor key in item.keys():\n    if key.startswith('dcterms:'):\n        print(f\"  {key}: {item[key]}\")\n\nSolutions:\n\nAdd Null Checks\n# Defensive programming\ndef safe_extract_property(item, property_name, property_id):\n    props = item.get(property_name, [])\n    if not props:\n        return \"\"\n    return extract_property(props, property_id)\nUpdate Property Mappings\n# Handle different property structures\ndef flexible_property_extract(item, property_names, property_id):\n    for prop_name in property_names:\n        if prop_name in item and item[prop_name]:\n            return extract_property(item[prop_name], property_id)\n    return \"\"\n\n\n\nIssue: Invalid payload or validation errors\nSymptoms:\n\n\n\n\n\n\nERROR - Invalid payload structure\nERROR - Required property missing in DSP\n\n\n\nSolutions:\n\nPayload Validation\ndef validate_payload(payload):\n    required_fields = ['@context', '@type', 'rdfs:label']\n    for field in required_fields:\n        if field not in payload:\n            raise ValueError(f\"Missing required field: {field}\")\n\n    # Validate field types\n    if not isinstance(payload.get('rdfs:label'), str):\n        raise ValueError(\"rdfs:label must be a string\")\n\n    return True\nSchema Compliance\n# Ensure payload matches DSP expectations\ndef ensure_dsp_compliance(payload):\n    # Remove empty fields\n    cleaned_payload = {k: v for k, v in payload.items() if v}\n\n    # Ensure required structure\n    if '@context' not in cleaned_payload:\n        cleaned_payload['@context'] = get_default_context()\n\n    return cleaned_payload",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html#file-upload-problems",
    "href": "docs/guides/troubleshooting.html#file-upload-problems",
    "title": "Troubleshooting Guide",
    "section": "File Upload Problems",
    "text": "File Upload Problems\n\nIssue: Media files fail to upload\nSymptoms:\n\n\n\n\n\n\nERROR - File upload failed\nERROR - File not found: filename.jpg\nrequests.exceptions.RequestException\n\n\n\nDiagnostic Steps:\n\nTest File Accessibility\n# Test file URL directly\ncurl -I \"https://omeka.unibe.ch/files/original/98d8559515187ec4a710347c7b9e6cda0bdd58d2.tif\"\n\n# Check file size\ncurl -sI \"URL\" | grep -i content-length\nTest Upload Process\n# Test file download and upload separately\nimport requests\n\n# Download test\nresponse = requests.get(file_url)\nprint(f\"Download status: {response.status_code}\")\nprint(f\"Content length: {len(response.content)}\")\n\n# Upload test\nfiles = {'file': ('test.jpg', response.content, 'image/jpeg')}\nupload_response = requests.post(upload_url, files=files, headers=headers)\nprint(f\"Upload status: {upload_response.status_code}\")\n\nSolutions:\n\n\n\n\n\n\n\nProblem\nSolution\n\n\n\n\nFile not accessible\nCheck Omeka permissions and URL\n\n\nFile too large\nImplement file compression or chunked upload\n\n\nTimeout during upload\nIncrease timeout, implement retry logic\n\n\nUnsupported format\nAdd format conversion or skip unsupported files\n\n\nInsufficient storage\nClean up temporary files, check disk space\n\n\n\n\n\nIssue: File format not supported\nSolutions:\n\nAdd Format Support\ndef specify_mediaclass(media_type: str) -&gt; str:\n    \"\"\"Enhanced media type detection\"\"\"\n    type_mapping = {\n        'image/jpeg': f'{PREFIX}sgb_MEDIA_IMAGE',\n        'image/png': f'{PREFIX}sgb_MEDIA_IMAGE',\n        'image/gif': f'{PREFIX}sgb_MEDIA_IMAGE',\n        'image/tiff': f'{PREFIX}sgb_MEDIA_IMAGE',\n        'application/pdf': f'{PREFIX}sgb_MEDIA_ARCHIV',\n        'text/plain': f'{PREFIX}sgb_MEDIA_ARCHIV',\n        'audio/mpeg': f'{PREFIX}sgb_MEDIA_AUDIO',  # New\n        'video/mp4': f'{PREFIX}sgb_MEDIA_VIDEO'    # New\n    }\n\n    return type_mapping.get(media_type, f'{PREFIX}sgb_MEDIA_ARCHIV')\nFormat Conversion\nfrom PIL import Image\n\ndef convert_image_format(file_path, target_format='JPEG'):\n    \"\"\"Convert image to supported format\"\"\"\n    with Image.open(file_path) as img:\n        if img.format != target_format:\n            converted_path = file_path.replace(img.format.lower(), target_format.lower())\n            img.convert('RGB').save(converted_path, target_format)\n            return converted_path\n    return file_path",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html#performance-issues",
    "href": "docs/guides/troubleshooting.html#performance-issues",
    "title": "Troubleshooting Guide",
    "section": "Performance Issues",
    "text": "Performance Issues\n\nIssue: Migration running very slowly\nSymptoms:\n\n\n\n\n\n\n\nProcessing takes much longer than expected\nHigh memory usage\nNetwork timeouts\nSystem becomes unresponsive\n\n\n\n\nDiagnostic Steps:\n\nPerformance Monitoring\n# Monitor system resources\nhtop\n\n# Monitor network usage\niftop\n\n# Check disk I/O\niostat -x 1\n\n# Monitor Python process\npy-spy top --pid $(pgrep -f data_2_dasch.py)\nProfile the Code\nimport cProfile\nimport pstats\n\n# Profile the migration\ncProfile.run('main()', 'migration_profile.prof')\n\n# Analyze results\nstats = pstats.Stats('migration_profile.prof')\nstats.sort_stats('cumulative').print_stats(10)\n\nSolutions:\n\nBatch Processing\ndef process_items_in_batches(items, batch_size=50):\n    \"\"\"Process items in smaller batches\"\"\"\n    for i in range(0, len(items), batch_size):\n        batch = items[i:i+batch_size]\n        for item in batch:\n            process_item(item)\n\n        # Small delay between batches\n        time.sleep(1)\n\n        # Memory cleanup\n        import gc\n        gc.collect()\nOptimize API Calls\nimport requests\nfrom requests.adapters import HTTPAdapter\nfrom urllib3.util.retry import Retry\n\ndef create_optimized_session():\n    session = requests.Session()\n\n    # Connection pooling\n    adapter = HTTPAdapter(\n        pool_connections=10,\n        pool_maxsize=20,\n        max_retries=Retry(\n            total=3,\n            backoff_factor=0.3,\n            status_forcelist=[500, 502, 504]\n        )\n    )\n\n    session.mount('http://', adapter)\n    session.mount('https://', adapter)\n    return session",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html#configuration-problems",
    "href": "docs/guides/troubleshooting.html#configuration-problems",
    "title": "Troubleshooting Guide",
    "section": "Configuration Problems",
    "text": "Configuration Problems\n\nIssue: Environment variables not loading\nSymptoms:\n\n\n\n\n\n\nKeyError: 'PROJECT_SHORT_CODE'\nERROR - Configuration variable not found\n\n\n\nSolutions:\n\nVerify .env File\n# Check file exists and has content\nls -la .env\ncat .env\n\n# Check for hidden characters\nhexdump -C .env | head\nLoad Environment Explicitly\n# Add explicit environment loading\nfrom dotenv import load_dotenv\nimport os\n\n# Load .env file\nload_dotenv()\n\n# Verify variables\nrequired_vars = ['OMEKA_API_URL', 'DSP_USER', 'PROJECT_SHORT_CODE']\nfor var in required_vars:\n    if not os.getenv(var):\n        raise EnvironmentError(f\"Required environment variable {var} not set\")\n\n\n\nIssue: Incorrect API endpoints\nSymptoms:\n\n\n\n\n\n\nERROR - 404 Not Found\nERROR - Invalid API endpoint\n\n\n\nSolutions:\n\nEndpoint Validation\ndef validate_endpoints():\n    \"\"\"Validate API endpoints are reachable\"\"\"\n    endpoints = {\n        'DSP API': f\"{API_HOST}/health\",\n        'Omeka API': f\"{OMEKA_API_URL}items?per_page=1\"\n    }\n\n    for name, url in endpoints.items():\n        try:\n            response = requests.get(url, timeout=10)\n            print(f\"✓ {name}: {response.status_code}\")\n        except Exception as e:\n            print(f\"✗ {name}: {e}\")\nDynamic Endpoint Discovery\ndef discover_api_version():\n    \"\"\"Discover correct API version\"\"\"\n    base_url = API_HOST.rstrip('/')\n    versions = ['/v2', '/v1', '']\n\n    for version in versions:\n        try:\n            url = f\"{base_url}{version}/health\"\n            response = requests.get(url, timeout=5)\n            if response.status_code == 200:\n                return f\"{base_url}{version}\"\n        except:\n            continue\n\n    raise Exception(\"No valid API endpoint found\")",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html#dsp-specific-issues",
    "href": "docs/guides/troubleshooting.html#dsp-specific-issues",
    "title": "Troubleshooting Guide",
    "section": "DSP-Specific Issues",
    "text": "DSP-Specific Issues\n\nIssue: “Project not found” or invalid project shortcode\nSolutions:\n\nVerify Project Information\n# Test project endpoint\ncurl -H \"Authorization: Bearer $TOKEN\" \\\n  \"$API_HOST/admin/projects/shortcode/$PROJECT_SHORT_CODE\"\nList Available Projects\ndef list_available_projects(token):\n    \"\"\"List projects user has access to\"\"\"\n    response = requests.get(\n        f\"{API_HOST}/admin/projects\",\n        headers={'Authorization': f'Bearer {token}'}\n    )\n\n    if response.status_code == 200:\n        projects = response.json().get('projects', [])\n        for project in projects:\n            print(f\"Shortcode: {project['shortcode']}, Name: {project['shortname']}\")\n    else:\n        print(f\"Failed to fetch projects: {response.status_code}\")\n\n\n\nIssue: List value mapping failures\nSymptoms:\n\n\n\n\n\n\nWARNING - List value not found for: unknown_value\nERROR - Invalid list node IRI\n\n\n\nSolutions:\n\nDebug List Mappings\ndef debug_list_mappings(lists, search_value):\n    \"\"\"Debug list value mappings\"\"\"\n    print(f\"Searching for: {search_value}\")\n\n    for list_obj in lists:\n        list_name = list_obj['listinfo']['name']\n        print(f\"\\nList: {list_name}\")\n\n        nodes = list_obj['list']['children']\n        for node in nodes:\n            labels = node['labels']\n            for label in labels:\n                if search_value.lower() in label['value'].lower():\n                    print(f\"  Found match: {label['value']} -&gt; {node['id']}\")\nFuzzy Matching\nfrom difflib import get_close_matches\n\ndef find_closest_list_value(value, list_values, cutoff=0.6):\n    \"\"\"Find closest matching list value\"\"\"\n    matches = get_close_matches(value, list_values, n=1, cutoff=cutoff)\n    if matches:\n        print(f\"Fuzzy match: '{value}' -&gt; '{matches[0]}'\")\n        return matches[0]\n    return None",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/guides/troubleshooting.html#getting-help",
    "href": "docs/guides/troubleshooting.html#getting-help",
    "title": "Troubleshooting Guide",
    "section": "Getting Help",
    "text": "Getting Help\n\nLog Information to Include\nWhen reporting issues, include:\n\nSystem Information\npython --version\nuname -a\npip list | grep requests\nConfiguration (sanitized)\n# Remove sensitive data first\nsed 's/PASSWORD=.*/PASSWORD=***/' .env\nError Logs\n# Last 50 lines of log\ntail -50 data_2_dasch.log\n\n# All error messages\ngrep \"ERROR\" data_2_dasch.log\nNetwork Diagnostics\ncurl -v https://api.dasch.swiss/health\nnslookup api.dasch.swiss\n\n\n\nCreating Effective Bug Reports\nUse this template:\n## Bug Description\nBrief description of the issue\n\n## Steps to Reproduce\n1. Step 1\n2. Step 2\n3. Error occurs\n\n## Expected Behavior\nWhat should happen\n\n## Actual Behavior\nWhat actually happens\n\n## Environment\n- Python version: 3.9.0\n- OS: Ubuntu 20.04\n- Network: Corporate/Home/University\n\n## Configuration\n(Sanitized .env contents)\n\n## Logs\n```\n\nError log contents here\n\n```         \n\n## Additional Context\nAny other relevant information\n\n\nSupport Channels\n\nGitHub Issues: For bugs and feature requests\nDocumentation: Check all documentation first\nCommunity: DSP community forums\nEmail: info@stadtgeschichtebasel.ch, for sensitive security issues only\n\nThis troubleshooting guide should help resolve the most common issues encountered when using the omeka2dsp system.",
    "crumbs": [
      "Home",
      "Guides",
      "Troubleshooting"
    ]
  },
  {
    "objectID": "docs/workflows/index.html",
    "href": "docs/workflows/index.html",
    "title": "Workflows Documentation",
    "section": "",
    "text": "This document describes the various workflows in the omeka2dsp system using Mermaid diagrams to illustrate the data flow and processing steps.",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "docs/workflows/index.html#overview",
    "href": "docs/workflows/index.html#overview",
    "title": "Workflows Documentation",
    "section": "Overview",
    "text": "Overview\nThe omeka2dsp system implements several interconnected workflows that work together to migrate and synchronize cultural heritage data between Omeka and DSP platforms.\n\n\n\n\n\ngraph TB\n    subgraph \"Primary Workflows\"\n        A[Main Migration Workflow]\n        B[Data Extraction Workflow]\n        C[Data Transformation Workflow]\n        D[Synchronization Workflow]\n        E[File Upload Workflow]\n    end\n    \n    subgraph \"Supporting Workflows\"\n        F[Configuration Setup]\n        G[Authentication]\n        H[Error Handling]\n        I[Logging]\n    end\n    \n    A --&gt; B\n    A --&gt; C\n    A --&gt; D\n    A --&gt; E\n    \n    F --&gt; A\n    G --&gt; A\n    H --&gt; A\n    I --&gt; A\n\n    click A href \"#main-migration-workflow\"\n    click B href \"#data-extraction-workflow\"\n    click C href \"#data-transformation-workflow\"\n    click D href \"#synchronization-workflow\"\n    click E href \"#file-upload-workflow\"\n    \n    style A fill:#e3f2fd\n    style B fill:#fff3e0\n    style C fill:#fff3e0\n    style D fill:#fff3e0\n    style E fill:#fff3e0",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "docs/workflows/index.html#main-migration-workflow",
    "href": "docs/workflows/index.html#main-migration-workflow",
    "title": "Workflows Documentation",
    "section": "Main Migration Workflow",
    "text": "Main Migration Workflow\nThis is the primary workflow executed when running data_2_dasch.py. It orchestrates all other workflows.\n\n\n\n\n\nflowchart TD\n    Start([Start Script]) --&gt; ParseArgs[Parse Command Line Arguments]\n    ParseArgs --&gt; LoadConfig[Load Environment Configuration]\n    LoadConfig --&gt; ValidateConfig{Configuration Valid?}\n    \n    ValidateConfig --&gt;|No| ConfigError[Exit with Configuration Error]\n    ValidateConfig --&gt;|Yes| SetMode[Determine Processing Mode]\n    \n    SetMode --&gt; ModeChoice{Processing Mode?}\n    ModeChoice --&gt;|all_data| FetchAll[Fetch All Items from Collection]\n    ModeChoice --&gt;|sample_data| FetchSample[Fetch Random Sample]\n    ModeChoice --&gt;|test_data| FetchTest[Fetch Test Data]\n    \n    FetchAll --&gt; Authenticate\n    FetchSample --&gt; Authenticate\n    FetchTest --&gt; Authenticate\n    \n    Authenticate[Authenticate with DSP] --&gt; AuthCheck{Authentication Successful?}\n    AuthCheck --&gt;|No| AuthError[Exit with Auth Error]\n    AuthCheck --&gt;|Yes| GetProject[Get Project Information]\n    \n    GetProject --&gt; GetLists[Fetch DSP Lists]\n    GetLists --&gt; StartProcessing[Start Item Processing Loop]\n    \n    StartProcessing --&gt; MoreItems{More Items to Process?}\n    MoreItems --&gt;|No| Complete[Migration Complete]\n    MoreItems --&gt;|Yes| ProcessItem[Process Next Item]\n    \n    ProcessItem --&gt; ExtractID[Extract Item Identifier]\n    ExtractID --&gt; CheckExists[Check if Resource Exists in DSP]\n    \n    CheckExists --&gt; ExistsChoice{Resource Exists?}\n    ExistsChoice --&gt;|No| CreateFlow[Create New Resource]\n    ExistsChoice --&gt;|Yes| SyncFlow[Synchronize Existing Resource]\n    \n    CreateFlow --&gt; TransformData[Transform Omeka Data to DSP Format]\n    TransformData --&gt; CreateResource[Create Resource in DSP]\n    CreateResource --&gt; ProcessMedia[Process Associated Media]\n    \n    SyncFlow --&gt; CompareData[Compare Omeka vs DSP Data]\n    CompareData --&gt; HasChanges{Data Has Changed?}\n    HasChanges --&gt;|No| ProcessMedia\n    HasChanges --&gt;|Yes| UpdateResource[Update Resource in DSP]\n    UpdateResource --&gt; ProcessMedia\n    \n    ProcessMedia --&gt; MediaComplete{All Media Processed?}\n    MediaComplete --&gt;|No| ProcessNextMedia[Process Next Media Item]\n    MediaComplete --&gt;|Yes| LogProgress[Log Processing Results]\n    \n    ProcessNextMedia --&gt; UploadMedia[Upload Media to DSP]\n    UploadMedia --&gt; LinkMedia[Link Media to Parent Resource]\n    LinkMedia --&gt; MediaComplete\n    \n    LogProgress --&gt; MoreItems\n    \n    Complete --&gt; GenerateReport[Generate Final Report]\n    GenerateReport --&gt; End([End Script])\n    \n    ConfigError --&gt; End\n    AuthError --&gt; End\n    \n    style Start fill:#e8f5e8\n    style End fill:#e8f5e8\n    style ProcessItem fill:#fff3e0\n    style CreateFlow fill:#e3f2fd\n    style SyncFlow fill:#fff8e1\n    style ProcessMedia fill:#f3e5f5\n    style Complete fill:#e8f5e8\n\n\n\n\n\n\n\nProcessing Mode Details\n\n\n\n\n\ngraph LR\n    subgraph \"Processing Modes\"\n        A[all_data] --&gt; A1[Process entire collection]\n        B[sample_data] --&gt; B1[Process random sample]\n        C[test_data] --&gt; C1[Process predefined test items]\n    end\n    \n    A1 --&gt; Config1[Uses ITEM_SET_ID from config]\n    B1 --&gt; Config2[Uses NUMBER_RANDOM_OBJECTS variable]\n    C1 --&gt; Config3[Uses TEST_DATA array]\n    \n    style A fill:#e3f2fd\n    style B fill:#fff8e1\n    style C fill:#ffebee",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "docs/workflows/index.html#data-extraction-workflow",
    "href": "docs/workflows/index.html#data-extraction-workflow",
    "title": "Workflows Documentation",
    "section": "Data Extraction Workflow",
    "text": "Data Extraction Workflow\nHandles the extraction of data from the Omeka API, implemented primarily in process_data_from_omeka.py.\n\n\n\n\n\nsequenceDiagram\n    participant Script as Main Script\n    participant Extractor as Data Extractor\n    participant OmekaAPI as Omeka API\n    participant Cache as Local Cache\n    \n    Script-&gt;&gt;Extractor: get_items_from_collection(collection_id)\n    \n    loop Paginated Request\n        Extractor-&gt;&gt;OmekaAPI: GET /items?item_set_id={id}&page={n}\n        OmekaAPI-&gt;&gt;Extractor: Items page + pagination links\n        Extractor-&gt;&gt;Cache: Store items temporarily\n    end\n    \n    Extractor-&gt;&gt;Script: Return all collected items\n    \n    loop For each item\n        Script-&gt;&gt;Extractor: get_media(item_id)\n        \n        loop Paginated Media Request\n            Extractor-&gt;&gt;OmekaAPI: GET /media?item_id={id}&page={n}\n            OmekaAPI-&gt;&gt;Extractor: Media page + pagination links\n        end\n        \n        Extractor-&gt;&gt;Script: Return media for item\n        \n        Script-&gt;&gt;Extractor: extract_property(properties, prop_id)\n        Extractor-&gt;&gt;Script: Return extracted property value\n        \n        Script-&gt;&gt;Extractor: extract_combined_values(properties)\n        Extractor-&gt;&gt;Script: Return combined values array\n    end\n\n\n\n\n\n\n\nProperty Extraction Details\n\n\n\n\n\nflowchart TD\n    A[Raw Omeka Property Array] --&gt; B[extract_property Function]\n    B --&gt; C{Property ID Match?}\n    C --&gt;|No| D[Try Next Property]\n    C --&gt;|Yes| E{Request Type?}\n    \n    E --&gt;|as_uri| F[Return formatted URI link]\n    E --&gt;|only_label| G[Return label only]\n    E --&gt;|default| H[Return @value]\n    \n    D --&gt; I{More Properties?}\n    I --&gt;|Yes| C\n    I --&gt;|No| J[Return Empty String]\n    \n    F --&gt; K[Formatted Result]\n    G --&gt; K\n    H --&gt; K\n    J --&gt; K\n    \n    style A fill:#e1f5fe\n    style K fill:#e8f5e8\n    style B fill:#fff3e0",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "docs/workflows/index.html#data-transformation-workflow",
    "href": "docs/workflows/index.html#data-transformation-workflow",
    "title": "Workflows Documentation",
    "section": "Data Transformation Workflow",
    "text": "Data Transformation Workflow\nConverts Omeka data structures into DSP-compatible formats, primarily handled by the construct_payload() function.\n\n\n\n\n\nflowchart TD\n    A[Omeka Item Data] --&gt; B[construct_payload Function]\n    B --&gt; C[Initialize Base Payload Structure]\n    \n    C --&gt; D[Set Context & Type Information]\n    D --&gt; E[Extract Basic Metadata]\n    \n    E --&gt; F[Process Dublin Core Properties]\n    F --&gt; F1[dcterms:title → rdfs:label]\n    F --&gt; F2[dcterms:identifier → identifier]\n    F --&gt; F3[dcterms:description → description]\n    F --&gt; F4[dcterms:creator → creator]\n    F --&gt; F5[dcterms:date → date]\n    \n    F1 --&gt; G[Process Custom Properties]\n    F2 --&gt; G\n    F3 --&gt; G\n    F4 --&gt; G\n    F5 --&gt; G\n    \n    G --&gt; G1[dcterms:subject → subject]\n    G --&gt; G2[dcterms:language → language]\n    G --&gt; G3[dcterms:rights → rights]\n    G --&gt; G4[dcterms:license → license]\n    \n    G1 --&gt; H[Map List Values]\n    G2 --&gt; H\n    G3 --&gt; H\n    G4 --&gt; H\n    \n    H --&gt; I{Resource Type?}\n    I --&gt;|Object| J[Add Object-Specific Fields]\n    I --&gt;|Media| K[Add Media-Specific Fields]\n    \n    J --&gt; L[Add Collection References]\n    K --&gt; M[Add File Information]\n    \n    L --&gt; N[Validate Payload Structure]\n    M --&gt; N\n    \n    N --&gt; O{Validation Passed?}\n    O --&gt;|No| P[Log Validation Errors]\n    O --&gt;|Yes| Q[Return Complete Payload]\n    \n    P --&gt; R[Return Null/Error]\n    \n    style A fill:#e1f5fe\n    style Q fill:#e8f5e8\n    style R fill:#ffebee\n    style B fill:#fff3e0\n\n\n\n\n\n\n\nList Value Mapping\n\n\n\n\n\nsequenceDiagram\n    participant T as Transformer\n    participant M as Mapper\n    participant L as DSP Lists\n    \n    T-&gt;&gt;M: extract_listvalueiri_from_value(value, list_label, lists)\n    M-&gt;&gt;L: Find list by label\n    L-&gt;&gt;M: Return list structure\n    \n    loop For each list node\n        M-&gt;&gt;L: Check if node label matches value\n        L-&gt;&gt;M: Return match result\n    end\n    \n    alt Match found\n        M-&gt;&gt;T: Return node IRI\n    else No match found\n        M-&gt;&gt;T: Return null\n        T-&gt;&gt;T: Log unmapped value warning\n    end",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "docs/workflows/index.html#synchronization-workflow",
    "href": "docs/workflows/index.html#synchronization-workflow",
    "title": "Workflows Documentation",
    "section": "Synchronization Workflow",
    "text": "Synchronization Workflow\nHandles incremental updates by comparing existing DSP data with current Omeka data.\n\n\n\n\n\nflowchart TD\n    A[Resource Exists in DSP] --&gt; B[get_full_resource]\n    B --&gt; C[Extract Current DSP Values]\n    C --&gt; D[Extract Current Omeka Values]\n    \n    D --&gt; E[check_values Function]\n    E --&gt; F[Compare Each Property]\n    \n    F --&gt; G{Property Type?}\n    G --&gt;|Single Value| H[sync_value]\n    G --&gt;|Array Value| I[sync_array_value]\n    \n    H --&gt; J[Compare Values]\n    J --&gt; K{Values Different?}\n    K --&gt;|No| L[No Action Needed]\n    K --&gt;|Yes| M[Queue Update Operation]\n    \n    I --&gt; N[Compare Arrays]\n    N --&gt; O[Calculate Additions & Deletions]\n    O --&gt; P[Queue Create/Delete Operations]\n    \n    L --&gt; Q[Process Next Property]\n    M --&gt; Q\n    P --&gt; Q\n    \n    Q --&gt; R{More Properties?}\n    R --&gt;|Yes| F\n    R --&gt;|No| S[Execute Queued Operations]\n    \n    S --&gt; T[Apply Updates via DSP API]\n    T --&gt; U[Log Synchronization Results]\n    \n    style A fill:#e1f5fe\n    style U fill:#e8f5e8\n    style E fill:#fff3e0\n    style S fill:#fff8e1\n\n\n\n\n\n\n\nArray Value Synchronization Details\n\n\n\n\n\nflowchart LR\n    A[DSP Array: a,b,c] --&gt; C[Comparison Logic]\n    B[Omeka Array: b,c,d] --&gt; C\n    \n    C --&gt; D[Calculate Differences]\n    D --&gt; E[To Create: d]\n    D --&gt; F[To Delete: a]\n    D --&gt; G[Unchanged: b,c]\n    \n    E --&gt; H[Create Operations]\n    F --&gt; I[Delete Operations]\n    G --&gt; J[No Action]\n    \n    H --&gt; K[Execute via DSP API]\n    I --&gt; K\n    \n    style C fill:#fff3e0\n    style K fill:#e8f5e8",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "docs/workflows/index.html#file-upload-workflow",
    "href": "docs/workflows/index.html#file-upload-workflow",
    "title": "Workflows Documentation",
    "section": "File Upload Workflow",
    "text": "File Upload Workflow\nManages the transfer of media files from Omeka to DSP storage.\n\n\n\n\n\nsequenceDiagram\n    participant Script as Main Script\n    participant Uploader as File Uploader\n    participant OmekaAPI as Omeka API\n    participant TempStorage as Temporary Storage\n    participant DSPAPI as DSP API\n    participant DSPStorage as DSP File Storage\n    \n    Script-&gt;&gt;Uploader: upload_file_from_url(file_url, token)\n    \n    Uploader-&gt;&gt;OmekaAPI: GET file_url\n    OmekaAPI-&gt;&gt;Uploader: File stream\n    \n    Uploader-&gt;&gt;TempStorage: Write to temporary file\n    TempStorage-&gt;&gt;Uploader: Temporary file path\n    \n    alt ZIP file\n        Uploader-&gt;&gt;Uploader: Create ZIP archive\n    end\n    \n    Uploader-&gt;&gt;DSPAPI: POST /v2/files (multipart upload)\n    DSPAPI-&gt;&gt;DSPStorage: Store file\n    DSPStorage-&gt;&gt;DSPAPI: File stored confirmation\n    DSPAPI-&gt;&gt;Uploader: Internal filename\n    \n    Uploader-&gt;&gt;TempStorage: Clean up temporary files\n    Uploader-&gt;&gt;Script: Return internal filename\n    \n    Script-&gt;&gt;Script: Update resource payload with filename\n    Script-&gt;&gt;DSPAPI: Create/Update resource with file reference\n\n\n\n\n\n\n\nMedia Type Classification\n\n\n\n\n\ngraph TD\n    A[Media MIME Type] --&gt; B[specify_mediaclass Function]\n    \n    B --&gt; C{MIME Type?}\n    C --&gt;|image/*| D[sgb_MEDIA_IMAGE]\n    C --&gt;|application/pdf| E[sgb_MEDIA_ARCHIV]\n    C --&gt;|text/*| E\n    C --&gt;|application/zip| E\n    C --&gt;|Other| F[sgb_MEDIA_ARCHIV - Default]\n    \n    D --&gt; G[StillImageFileValue]\n    E --&gt; H[ArchiveFileValue]\n    F --&gt; H\n    \n    G --&gt; I[Configure Image-specific Fields]\n    H --&gt; J[Configure Archive-specific Fields]\n    \n    style A fill:#e1f5fe\n    style B fill:#fff3e0\n    style G fill:#e3f2fd\n    style H fill:#f3e5f5",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "docs/workflows/index.html#error-handling-workflow",
    "href": "docs/workflows/index.html#error-handling-workflow",
    "title": "Workflows Documentation",
    "section": "Error Handling Workflow",
    "text": "Error Handling Workflow\nComprehensive error handling and recovery mechanisms throughout the system.\n\n\n\n\n\nflowchart TD\n    A[Operation Attempted] --&gt; B{Operation Successful?}\n    \n    B --&gt;|Yes| C[Continue Processing]\n    B --&gt;|No| D[Capture Error Details]\n    \n    D --&gt; E[Log Error Information]\n    E --&gt; F{Error Type?}\n    \n    F --&gt;|Authentication Error| G[Re-authenticate]\n    F --&gt;|Rate Limit Error| H[Wait and Retry]\n    F --&gt;|Network Error| I[Retry with Backoff]\n    F --&gt;|Data Validation Error| J[Skip Item, Log Warning]\n    F --&gt;|Critical System Error| K[Fail Fast]\n    \n    G --&gt; L{Re-auth Successful?}\n    L --&gt;|Yes| M[Retry Original Operation]\n    L --&gt;|No| K\n    \n    H --&gt; N[Sleep for Rate Limit Period]\n    N --&gt; M\n    \n    I --&gt; O[Exponential Backoff Delay]\n    O --&gt; P{Max Retries Reached?}\n    P --&gt;|No| M\n    P --&gt;|Yes| Q[Mark as Failed, Continue]\n    \n    J --&gt; Q\n    K --&gt; R[Exit with Error Code]\n    \n    M --&gt; A\n    Q --&gt; S[Continue with Next Item]\n    C --&gt; S\n    \n    S --&gt; T[Processing Complete]\n    \n    style A fill:#e1f5fe\n    style T fill:#e8f5e8\n    style K fill:#ffebee\n    style R fill:#ffebee\n    style E fill:#fff8e1",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "docs/workflows/index.html#api-utility-workflows",
    "href": "docs/workflows/index.html#api-utility-workflows",
    "title": "Workflows Documentation",
    "section": "API Utility Workflows",
    "text": "API Utility Workflows\nSupporting scripts that prepare the environment and fetch configuration data.\n\nProject Information Workflow (api_get_project.py)\n\n\n\n\n\nsequenceDiagram\n    participant Script as api_get_project.py\n    participant DSPAPI as DSP API\n    participant FileSystem as Local Storage\n    \n    Script-&gt;&gt;Script: Load PROJECT_SHORT_CODE from env\n    Script-&gt;&gt;Script: Load API_HOST from env\n    \n    Script-&gt;&gt;DSPAPI: GET /admin/projects/shortcode/{shortcode}\n    \n    alt Success\n        DSPAPI-&gt;&gt;Script: Project data (JSON)\n        Script-&gt;&gt;FileSystem: Save to ../data/project_data.json\n        Script-&gt;&gt;Script: Log success message\n    else Failure\n        DSPAPI-&gt;&gt;Script: Error response\n        Script-&gt;&gt;Script: Log error details\n    end\n\n\n\n\n\n\n\n\nLists Retrieval Workflow (api_get_lists.py)\n\n\n\n\n\nsequenceDiagram\n    participant Script as api_get_lists.py\n    participant DSPAPI as DSP API\n    participant FileSystem as Local Storage\n    \n    Script-&gt;&gt;Script: Set project_iri (hardcoded)\n    Script-&gt;&gt;Script: URL encode project IRI\n    \n    Script-&gt;&gt;DSPAPI: GET /admin/lists/?projectIri={encoded_iri}\n    \n    alt Success\n        DSPAPI-&gt;&gt;Script: Lists summary (JSON)\n        Script-&gt;&gt;FileSystem: Save to ../data/data_lists.json\n        Script-&gt;&gt;Script: Log success message\n    else Failure\n        DSPAPI-&gt;&gt;Script: Error response\n        Script-&gt;&gt;Script: Log error details\n    end\n\n\n\n\n\n\n\n\nDetailed Lists Workflow (api_get_lists_detailed.py)\n\n\n\n\n\nflowchart TD\n    A[Start Script] --&gt; B[Load data_lists.json]\n    B --&gt; C{File Loaded?}\n    C --&gt;|No| D[Exit with Error]\n    C --&gt;|Yes| E[Extract List IDs]\n    \n    E --&gt; F[Initialize Empty Results Array]\n    F --&gt; G[Process Next List ID]\n    \n    G --&gt; H[URL Encode List ID]\n    H --&gt; I[\"GET /v2/lists/{encoded_id}\"]\n    \n    I --&gt; J{Request Successful?}\n    J --&gt;|Yes| K[Add to Results Array]\n    J --&gt;|No| L[Log Error, Continue]\n    \n    K --&gt; M{More Lists?}\n    L --&gt; M\n    M --&gt;|Yes| G\n    M --&gt;|No| N[Save All Results to data_lists_detail.json]\n    \n    N --&gt; O[Log Completion]\n    O --&gt; P[End Script]\n    D --&gt; P\n    \n    style A fill:#e8f5e8\n    style P fill:#e8f5e8\n    style B fill:#fff3e0\n    style I fill:#e3f2fd",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "docs/workflows/index.html#workflow-integration",
    "href": "docs/workflows/index.html#workflow-integration",
    "title": "Workflows Documentation",
    "section": "Workflow Integration",
    "text": "Workflow Integration\nAll workflows integrate through the main processing pipeline, working together to provide a robust, fault-tolerant data migration system that can handle various scenarios from initial bulk migration to ongoing incremental synchronization:\n\n\n\n\n\ngraph TB\n    subgraph \"Initialization Phase\"\n        A1[Configuration Loading]\n        A2[Authentication]\n        A3[Project & Lists Retrieval]\n    end\n    \n    subgraph \"Processing Phase\"\n        B1[Data Extraction]\n        B2[Data Transformation]\n        B3[Synchronization Check]\n        B4[File Upload]\n    end\n    \n    subgraph \"Completion Phase\"\n        C1[Result Logging]\n        C2[Cleanup]\n        C3[Report Generation]\n    end\n    \n    A1 --&gt; A2\n    A2 --&gt; A3\n    A3 --&gt; B1\n    \n    B1 --&gt; B2\n    B2 --&gt; B3\n    B3 --&gt; B4\n    B4 --&gt; B1\n    \n    B4 --&gt; C1\n    C1 --&gt; C2\n    C2 --&gt; C3\n    \n    style A1 fill:#e1f5fe\n    style B1 fill:#fff3e0\n    style C1 fill:#e8f5e8",
    "crumbs": [
      "Home",
      "Documentation",
      "Data Workflows"
    ]
  },
  {
    "objectID": "project-management/people.html",
    "href": "project-management/people.html",
    "title": "People",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "About",
      "People"
    ]
  },
  {
    "objectID": "project-management/communication.html",
    "href": "project-management/communication.html",
    "title": "Communication",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "About",
      "Communication"
    ]
  },
  {
    "objectID": "project-management/about.html",
    "href": "project-management/about.html",
    "title": "Stadt.Geschichte.Basel",
    "section": "",
    "text": "This repository contains the pipeline and data model for the long-term preservation of the research data of Stadt.Geschichte.Basel.\nStadt.Geschichte.Basel is an interdisciplinary research project dedicated to the comprehensive study and documentation of Basel’s long history in a nine-volume book series. Over 70 researchers and staff from various countries are investigating the history of Basel from the first traces of settlement to the present day. Our goal is to make a significant contribution to the study and documentation of Basel’s history while making the past accessible in an appealing way.\n\n🏛️ Visit the project portal: stadtgeschichtebasel.ch\n🔎 Deep dive into the project’s Open Research Data\n📚 Get the book series from Christoph Merian Verlag or at openaccess.stadtgeschichtebasel.ch\n💎 Explore all products developed by the Research Data Management and Public History Team\n\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "About"
    ]
  },
  {
    "objectID": "docs/index.html",
    "href": "docs/index.html",
    "title": "omeka2dsp Documentation",
    "section": "",
    "text": "Complete documentation for the Omeka to DaSCH Service Platform (DSP) data migration tool.",
    "crumbs": [
      "Home",
      "Documentation",
      "Overview"
    ]
  },
  {
    "objectID": "docs/index.html#core-documentation",
    "href": "docs/index.html#core-documentation",
    "title": "omeka2dsp Documentation",
    "section": "📚 Core Documentation",
    "text": "📚 Core Documentation\n\n🏗️ System Architecture – Overview of system components, design patterns, and data flow architecture with class diagrams illustrating core components and their interactions.\n🔄 Data Migration Workflows – Complete workflow documentation with Mermaid diagrams covering the main migration workflow (end-to-end process), data extraction workflow (Omeka API interaction), data transformation workflow (format conversion), synchronization workflow (incremental updates), file upload workflow (media processing) and error handling workflow (recovery and retry)\n🔧 API Reference – Comprehensive documentation of all 5 Python modules with 50+ functions\n🧩 Data Model – Data model documentation",
    "crumbs": [
      "Home",
      "Documentation",
      "Overview"
    ]
  },
  {
    "objectID": "docs/index.html#guides",
    "href": "docs/index.html#guides",
    "title": "omeka2dsp Documentation",
    "section": "📒 Guides",
    "text": "📒 Guides\n\n⚡ Installation & Setup – How to install and configure the system\n⚙️ Configuration – Environment variables and settings\n📋 Usage – How to run the migration scripts\n🛠️ Development – Contributing and extending the codebase\n🔍 Troubleshooting – Common issues and solutions",
    "crumbs": [
      "Home",
      "Documentation",
      "Overview"
    ]
  },
  {
    "objectID": "docs/index.html#quick-start",
    "href": "docs/index.html#quick-start",
    "title": "omeka2dsp Documentation",
    "section": "🚀 Quick Start",
    "text": "🚀 Quick Start\n\nSetup Environment: Configure your environment variables (see Configuration Guide)\nInstall Dependencies: Install required Python packages\nRun Migration: Execute the data transfer script\n\n# Set up environment variables\ncp example.env .env\n# Edit .env with your configuration\n\n# Run the migration\nuv run python scripts/data_2_dasch.py",
    "crumbs": [
      "Home",
      "Documentation",
      "Overview"
    ]
  },
  {
    "objectID": "docs/index.html#system-overview",
    "href": "docs/index.html#system-overview",
    "title": "omeka2dsp Documentation",
    "section": "System Overview",
    "text": "System Overview\nThe omeka2dsp system transfers research data from Stadt.Geschichte.Basel (SGB)’s Omeka instance to the DaSCH Service Platform (DSP) for long-term preservation.\n\nFeatures\n\n✅ Full Data Migration – Transfer metadata and media files\n✅ Incremental Sync – Update existing resources with changes\n✅ Multiple Modes – Process all data, samples, or test data\n✅ Error Handling – Comprehensive logging and error recovery\n✅ Configuration – Flexible environment-based configuration\n\n\n\nKey Components\n\n\n\n\n\ngraph LR\n    A[Omeka API] --&gt; B[data_2_dasch.py]\n    B --&gt; C[DSP API]\n    B --&gt; D[File Storage]\n    \n    E[process_data_from_omeka.py] --&gt; B\n    F[Configuration] --&gt; B\n    \n    style A fill:#e1f5fe\n    style C fill:#e8f5e8\n    style B fill:#fff3e0\n\n\n\n\n\n\n\n\nMain Scripts\n\ndata_2_dasch.py – Main migration script with sync capabilities\nprocess_data_from_omeka.py – Omeka API data extraction utilities\napi_get_project.py – Fetch DSP project information\napi_get_lists.py – Retrieve DSP list configurations\napi_get_lists_detailed.py – Get detailed list metadata\n\nFor detailed API documentation, see API Reference.\n\n\nArchitecture\nThe system follows a modular architecture with clear separation of concerns:\n\nData Extraction Layer – Interfaces with Omeka API\nTransformation Layer – Converts data formats between systems\nUpload Layer – Manages file transfers and API interactions\nSynchronization Layer – Handles incremental updates and conflict resolution\n\nFor detailed architecture documentation, see System Architecture.",
    "crumbs": [
      "Home",
      "Documentation",
      "Overview"
    ]
  },
  {
    "objectID": "docs/guides/usage.html",
    "href": "docs/guides/usage.html",
    "title": "Usage Guide",
    "section": "",
    "text": "Complete guide for running data migrations with the omeka2dsp system. This guide provides comprehensive instructions for successfully running data migrations with the omeka2dsp system. Follow the best practices and monitoring guidelines to ensure smooth and reliable data transfers.",
    "crumbs": [
      "Home",
      "Guides",
      "Usage Guide"
    ]
  },
  {
    "objectID": "docs/guides/usage.html#quick-start",
    "href": "docs/guides/usage.html#quick-start",
    "title": "Usage Guide",
    "section": "Quick Start",
    "text": "Quick Start\n\nPre-flight Checklist\nBefore running a migration, verify:\n\nEnvironment variables are configured in .env\nDSP project and data model exist\nOmeka collection is accessible\nYou have sufficient permissions on both systems\nNetwork connectivity is stable\n\n\n\nBasic Migration\nRun a complete migration of your Omeka collection:\n# Navigate to project directory\ncd omeka2dsp\n\n# Run full migration\nuv run python scripts/data_2_dasch.py\n\n# Or explicitly specify all_data mode\nuv run python scripts/data_2_dasch.py -m all_data\nExpected output:\n2024-01-15 10:30:15 - INFO - Login successful\n2024-01-15 10:30:16 - INFO - project Iri: http://rdfh.ch/projects/IbwoJlv8SEa6L13vXyCzMg\n2024-01-15 10:30:17 - INFO - Got Lists from project\n2024-01-15 10:30:18 - INFO - Processing item: abb13025\n2024-01-15 10:30:19 - INFO - Resource created successfully\n2024-01-15 10:30:20 - INFO - Uploaded media: image.jpg\n...",
    "crumbs": [
      "Home",
      "Guides",
      "Usage Guide"
    ]
  },
  {
    "objectID": "docs/guides/usage.html#processing-modes",
    "href": "docs/guides/usage.html#processing-modes",
    "title": "Usage Guide",
    "section": "Processing Modes",
    "text": "Processing Modes\nThe system supports three processing modes to handle different use cases:\n\n1. All Data Mode (Production)\nProcesses the entire Omeka collection.\nuv run python scripts/data_2_dasch.py -m all_data\nUse Cases:\n\nProduction migrations\nComplete data transfers\nInitial system setup\n\nConsiderations:\n\nCan take several hours for large collections\nRequires stable network connection\nMonitor disk space for media downloads\n\n\n\n2. Sample Data Mode (Testing)\nProcesses a random sample of items for testing purposes.\nuv run python scripts/data_2_dasch.py -m sample_data\nConfiguration:\nEdit NUMBER_RANDOM_OBJECTS in data_2_dasch.py:\nNUMBER_RANDOM_OBJECTS = 10  # Process 10 random items\nUse Cases:\n\nTesting configuration changes\nValidating data transformations\nPerformance testing with smaller datasets\n\n\n\n3. Test Data Mode (Development)\nProcesses specific predefined items for development and debugging.\nuv run python scripts/data_2_dasch.py -m test_data\nConfiguration:\nEdit TEST_DATA set in data_2_dasch.py:\nTEST_DATA = {\n    'abb13025',  # Specific item identifier\n    'abb14375',  # Another item identifier\n    'abb41033'   # Add more as needed\n}\nUse Cases:\n\nDebugging specific items\nTesting edge cases\nDevelopment workflow",
    "crumbs": [
      "Home",
      "Guides",
      "Usage Guide"
    ]
  },
  {
    "objectID": "docs/guides/usage.html#command-line-usage",
    "href": "docs/guides/usage.html#command-line-usage",
    "title": "Usage Guide",
    "section": "Command Line Usage",
    "text": "Command Line Usage\n\nBasic Syntax\nuv run python scripts/data_2_dasch.py [OPTIONS]\n\n\nAvailable Options\n\n\n\n\n\n\n\n\nOption\nDescription\nDefault\n\n\n\n\n-m, --mode\nProcessing mode: all_data, sample_data, test_data\nall_data\n\n\n-h, --help\nShow help message and exit\n-\n\n\n\n\n\nExamples\n# Process all data (default)\nuv run python scripts/data_2_dasch.py\n\n# Process sample data with explicit mode\nuv run python scripts/data_2_dasch.py --mode sample_data\n\n# Process test data\nuv run python scripts/data_2_dasch.py -m test_data\n\n# Show help\nuv run python scripts/data_2_dasch.py --help",
    "crumbs": [
      "Home",
      "Guides",
      "Usage Guide"
    ]
  },
  {
    "objectID": "docs/guides/usage.html#monitoring-migration-progress",
    "href": "docs/guides/usage.html#monitoring-migration-progress",
    "title": "Usage Guide",
    "section": "Monitoring Migration Progress",
    "text": "Monitoring Migration Progress\n\nReal-time Monitoring\nThe script provides real-time progress information through console output:\n# Run with output to terminal and file\nuv run python scripts/data_2_dasch.py 2&gt;&1 | tee migration.log\n\n\nLog Files\nMonitor detailed progress in log files:\n# Watch log file in real-time\ntail -f data_2_dasch.log\n\n# Search for errors\ngrep \"ERROR\" data_2_dasch.log\n\n# Count successful creations\ngrep \"Resource created successfully\" data_2_dasch.log | wc -l\n\n\nProgress Indicators\nMonitor these key indicators:\n\nSuccessful Operations\n\n\n\n\n\n\nINFO - Resource created successfully\nINFO - Resource updated successfully  \nINFO - Uploaded media: filename.jpg\nINFO - Media linked to parent resource\n\n\n\n\n\nWarning Indicators\n\n\n\n\n\n\nWARNING - Resource already exists, checking for updates\nWARNING - Media file not found: missing.jpg\nWARNING - List value not found for: unknown_value\n\n\n\n\n\nError Indicators\n\n\n\n\n\n\nERROR - Authentication failed\nERROR - Failed to create resource\nERROR - File upload failed\nERROR - Network timeout\n\n\n\n\n\n\nPerformance Metrics\nTrack performance metrics:\n# Count total items processed\ngrep \"Processing item:\" data_2_dasch.log | wc -l\n\n# Average processing time per item\ngrep \"Processing time:\" data_2_dasch.log | awk '{sum+=$4; count++} END {print sum/count}'\n\n# Failed operations\ngrep \"FAILED\" data_2_dasch.log | wc -l",
    "crumbs": [
      "Home",
      "Guides",
      "Usage Guide"
    ]
  },
  {
    "objectID": "docs/guides/usage.html#data-synchronization",
    "href": "docs/guides/usage.html#data-synchronization",
    "title": "Usage Guide",
    "section": "Data Synchronization",
    "text": "Data Synchronization\nThe system automatically handles synchronization between Omeka and DSP:\n\nInitial Migration\nFor new resources:\n\nSystem checks if resource exists in DSP\nIf not found, creates new resource\nUploads and links associated media files\nLogs creation success\n\n\n\nIncremental Updates\nFor existing resources:\n\nSystem retrieves current DSP data\nCompares with current Omeka data\nIdentifies differences (additions, deletions, changes)\nApplies only necessary updates\nLogs synchronization results\n\n\n\nSynchronization Process Flow\n\n\n\n\n\nflowchart TD\n    A[Process Omeka Item] --&gt; B[Check DSP Resource Exists]\n    B --&gt;|Not Found| C[Create New Resource]\n    B --&gt;|Found| D[Compare Data]\n    \n    C --&gt; E[Upload Media Files]\n    D --&gt; F{Has Changes?}\n    F --&gt;|Yes| G[Update Resource]\n    F --&gt;|No| H[Skip - No Changes]\n    \n    G --&gt; I[Apply Updates]\n    I --&gt; E\n    E --&gt; J[Link Media to Resource]\n    H --&gt; K[Process Next Item]\n    J --&gt; K\n    \n    style C fill:#e3f2fd\n    style G fill:#fff8e1\n    style H fill:#e8f5e8\n\n\n\n\n\n\n\n\nConflict Resolution\nThe system handles common conflicts:\n\nValue Changes\n\nOmeka has new value, DSP has old: Updates DSP value\nOmeka removes value, DSP has value: Deletes DSP value\nBoth systems have different values: Omeka value takes precedence\n\n\n\nArray Properties\n\nOmeka adds item: Creates new value in DSP\nOmeka removes item: Deletes value from DSP\nComplex changes: Calculates minimal set of operations\n\n\n\nMedia Files\n\nFile changed in Omeka: Re-uploads file to DSP\nFile removed from Omeka: Logs warning (manual review needed)\nFile corrupted: Skips file, logs error",
    "crumbs": [
      "Home",
      "Guides",
      "Usage Guide"
    ]
  },
  {
    "objectID": "docs/guides/usage.html#file-handling",
    "href": "docs/guides/usage.html#file-handling",
    "title": "Usage Guide",
    "section": "File Handling",
    "text": "File Handling\n\nMedia Processing Workflow\n\n\n\n\n\nsequenceDiagram\n    participant S as Script\n    participant O as Omeka\n    participant T as Temp Storage\n    participant D as DSP\n    \n    S-&gt;&gt;O: Request media file\n    O-&gt;&gt;S: Return file URL\n    S-&gt;&gt;O: Download file stream\n    O-&gt;&gt;T: Stream file data\n    T-&gt;&gt;S: Temporary file created\n    \n    S-&gt;&gt;S: Determine file type\n    S-&gt;&gt;S: Check if compression needed\n    \n    alt File &gt; 10MB\n        S-&gt;&gt;T: Create ZIP archive\n        T-&gt;&gt;S: Compressed file ready\n    end\n    \n    S-&gt;&gt;D: Upload file (multipart)\n    D-&gt;&gt;S: Return internal filename\n    S-&gt;&gt;S: Update resource with filename\n    S-&gt;&gt;T: Clean up temporary files\n\n\n\n\n\n\n\n\nSupported File Types\n\n\n\n\n\n\n\n\nCategory\nMIME Types\nDSP Class\n\n\n\n\nImages\nimage/jpeg, image/png, image/gif, image/tiff\nsgb_MEDIA_IMAGE\n\n\nDocuments\napplication/pdf, text/plain, text/html\nsgb_MEDIA_ARCHIV\n\n\nArchives\napplication/zip, application/x-tar\nsgb_MEDIA_ARCHIV\n\n\nOther\nAll other types\nsgb_MEDIA_ARCHIV (default)\n\n\n\n\n\nFile Processing Options\nConfigure file handling behavior:\n# Edit in data_2_dasch.py\nFILE_PROCESSING_CONFIG = {\n    'max_file_size': 100 * 1024 * 1024,  # 100MB\n    'compression_threshold': 10 * 1024 * 1024,  # 10MB\n    'supported_formats': [\n        'image/jpeg', 'image/png', 'application/pdf'\n    ],\n    'skip_large_files': False,  # Skip files exceeding max size\n    'create_thumbnails': False  # Generate thumbnails (if supported)\n}",
    "crumbs": [
      "Home",
      "Guides",
      "Usage Guide"
    ]
  },
  {
    "objectID": "docs/guides/usage.html#troubleshooting-common-issues",
    "href": "docs/guides/usage.html#troubleshooting-common-issues",
    "title": "Usage Guide",
    "section": "Troubleshooting Common Issues",
    "text": "Troubleshooting Common Issues\nRefer to the comprehensive Troubleshooting Guide as well.\n\nAuthentication Problems\nIssue: Login failed or token expired\n# Test authentication\nuv run python -c \"\nfrom scripts.data_2_dasch import login\nimport os\ntry:\n    token = login(os.getenv('DSP_USER'), os.getenv('DSP_PWD'))\n    print('Authentication successful')\nexcept Exception as e:\n    print(f'Authentication failed: {e}')\n\"\nSolutions:\n\nVerify username and password\nCheck if account is locked\nEnsure API endpoints are correct\n\n\n\nNetwork Issues\nIssue: Connection timeouts or failures\n# Test network connectivity\ncurl -v https://api.dasch.swiss/health\nping api.dasch.swiss\nSolutions:\n\nCheck internet connection\nVerify firewall settings\nConsider proxy configuration\n\n\n\nData Validation Errors\nIssue: Invalid payload or data format errors\n# Check specific item data\nuv run python -c \"\nfrom scripts.process_data_from_omeka import get_items_from_collection\nitems = get_items_from_collection('$ITEM_SET_ID')\nproblem_item = next(item for item in items if item['o:id'] == 'PROBLEM_ID')\nprint(json.dumps(problem_item, indent=2))\n\"\nSolutions:\n\nVerify data model compatibility\nCheck required field presence\nValidate list value mappings\n\n\n\nFile Upload Failures\nIssue: Media files fail to upload\n# Check file accessibility\ncurl -I \"https://omeka.unibe.ch/files/original/98d8559515187ec4a710347c7b9e6cda0bdd58d2.tif\"\nSolutions:\n\nVerify file exists and is accessible\nCheck file size limits\nEnsure stable network connection\nRetry upload for temporary failures",
    "crumbs": [
      "Home",
      "Guides",
      "Usage Guide"
    ]
  },
  {
    "objectID": "docs/guides/usage.html#best-practices",
    "href": "docs/guides/usage.html#best-practices",
    "title": "Usage Guide",
    "section": "Best Practices",
    "text": "Best Practices\n\nPre-Migration Planning\n\nData Assessment\n# Count items in collection\nuv run python -c \"\nfrom scripts.process_data_from_omeka import get_items_from_collection\nitems = get_items_from_collection('$ITEM_SET_ID')\nprint(f'Total items: {len(items)}')\n\n# Estimate processing time (1-2 items per second)\nestimated_minutes = len(items) / 60\nprint(f'Estimated time: {estimated_minutes:.1f} minutes')\n\"\nTest Run\n# Always start with sample data\nuv run python scripts/data_2_dasch.py -m sample_data\nBackup Strategy\n# Create backup of current DSP state\n# (Use DSP export tools if available)\n\n\n\nDuring Migration\n\nMonitor Progress\n# Run in screen/tmux for long migrations\nscreen -S migration\nuv run python scripts/data_2_dasch.py 2&gt;&1 | tee migration_$(date +%Y%m%d_%H%M%S).log\nResource Management\n# Monitor system resources\nhtop\ndf -h  # Check disk space\nError Handling\n# Monitor for errors in real-time\ntail -f data_2_dasch.log | grep -E \"(ERROR|FAILED)\"\n\n\n\nPost-Migration\n\nValidation\n# Count migrated resources\ngrep \"Resource created successfully\" data_2_dasch.log | wc -l\ngrep \"Resource updated successfully\" data_2_dasch.log | wc -l\nQuality Assurance\n# Check for missing media\ngrep \"Media file not found\" data_2_dasch.log\n\n# Check for validation errors\ngrep \"Validation failed\" data_2_dasch.log\nDocumentation\n# Create migration report\necho \"Migration completed on $(date)\" &gt; migration_report.txt\necho \"Items processed: $(grep 'Processing item:' data_2_dasch.log | wc -l)\" &gt;&gt; migration_report.txt\necho \"Resources created: $(grep 'Resource created successfully' data_2_dasch.log | wc -l)\" &gt;&gt; migration_report.txt\necho \"Resources updated: $(grep 'Resource updated successfully' data_2_dasch.log | wc -l)\" &gt;&gt; migration_report.txt\necho \"Errors encountered: $(grep 'ERROR' data_2_dasch.log | wc -l)\" &gt;&gt; migration_report.txt\n\n\n\nPerformance Optimization\n\nBatch Processing\n\nProcess large collections in smaller batches\nUse sample_data mode with increasing sample sizes\n\nNetwork Optimization\n\nEnsure stable, high-speed internet connection\nConsider running on server closer to DSP infrastructure\n\nResource Management\n\nMonitor memory usage for large files\nClean temporary files regularly\nUse SSD storage for better I/O performance\n\n\n\n\nError Recovery\n\nResuming Interrupted Migrations\n# The system automatically skips existing resources\n# Simply re-run the same command\nuv run python scripts/data_2_dasch.py -m all_data\nSelective Re-processing\n# Process specific problematic items\n# Edit TEST_DATA with failed identifiers\nuv run python scripts/data_2_dasch.py -m test_data\nClean Up and Retry\n# Clean temporary files\nrm -rf /tmp/omeka2dsp_*\n\n# Clear logs for fresh start\nrm data_2_dasch.log\n\n# Retry migration\nuv run python scripts/data_2_dasch.py",
    "crumbs": [
      "Home",
      "Guides",
      "Usage Guide"
    ]
  },
  {
    "objectID": "docs/guides/development.html",
    "href": "docs/guides/development.html",
    "title": "Development Guide",
    "section": "",
    "text": "Guide for developers contributing to or extending the omeka2dsp system.",
    "crumbs": [
      "Home",
      "Guides",
      "Development Guide"
    ]
  },
  {
    "objectID": "docs/guides/development.html#development-environment-setup",
    "href": "docs/guides/development.html#development-environment-setup",
    "title": "Development Guide",
    "section": "Development Environment Setup",
    "text": "Development Environment Setup\nWe recommend using GitHub Codespaces for development.\n\n🚀 Reproducible Setup with GitHub Codespaces (Most Users)👩‍💻 Local Installation (Advanced)\n\n\n\nFork this repository to your GitHub account.\nClick the green &lt;&gt; Code button and select “Codespaces”.\nClick “Create codespace on main”. This provides:\n\n✅ Python with uv\n✅ Node.js with pnpm\n✅ Pre-configured development environment\n✅ All dependencies pre-installed\n\nCreate your development configuration:\n# Create development environment file\ncp example.env .env.dev\n# Edit with your test instance credentials\nCreate a development branch:\ngit checkout -b feature/your-feature-name\n\n\n\n\nPrerequisites\n\nuv (Python manager)\npnpm\nNode.js (latest LTS)\nGit\nAccess to Omeka and DSP test instances\n\n\n\nInitial Setup\n# Clone repository\ngit clone https://github.com/Stadt-Geschichte-Basel/omeka2dsp.git\ncd omeka2dsp\n\n# Create development branch\ngit checkout -b feature/your-feature-name\n\n# Setup Python environment with dev dependencies\nuv sync --dev\n\n# Install Node.js development tools\npnpm install\npnpm run prepare\n\n\nDevelopment Configuration\nCreate a development environment file:\ncp example.env .env.dev\nEdit .env.dev with test instance credentials:\n# Development configuration\nOMEKA_API_URL=https://test-omeka.example.com/api/\nKEY_IDENTITY=test_key_identity\nKEY_CREDENTIAL=test_key_credential\nITEM_SET_ID=test_collection_id\n\n# DSP test instance\nPROJECT_SHORT_CODE=TEST\nAPI_HOST=https://test-api.dasch.swiss\nINGEST_HOST=https://test-ingest.dasch.swiss\nDSP_USER=test@example.com\nDSP_PWD=test_password\n\n# Development settings\nDEBUG_MODE=true\nLOG_LEVEL=DEBUG",
    "crumbs": [
      "Home",
      "Guides",
      "Development Guide"
    ]
  },
  {
    "objectID": "docs/guides/development.html#code-architecture",
    "href": "docs/guides/development.html#code-architecture",
    "title": "Development Guide",
    "section": "Code Architecture",
    "text": "Code Architecture\n\nModule Structure\nscripts/\n├── data_2_dasch.py              # Main migration orchestrator\n├── process_data_from_omeka.py   # Omeka API interface\n├── api_get_project.py           # DSP project utilities\n├── api_get_lists.py            # DSP lists utilities\n└── api_get_lists_detailed.py   # Detailed list utilities\nAlso refer to the documentation on the Pipeline Architecture.\n\n\nKey Design Patterns\n\nRepository Pattern: Data access abstraction\nBuilder Pattern: Payload construction\nStrategy Pattern: Different resource types\nCommand Pattern: Update operations\n\n\n\nCore Components\n\n\n\n\n\nclassDiagram\n    class MigrationOrchestrator {\n        +main()\n        +process_items()\n        +handle_item()\n    }\n    \n    class OmekaRepository {\n        +get_items_from_collection()\n        +get_media()\n        +extract_property()\n    }\n    \n    class DSPRepository {\n        +login()\n        +get_project()\n        +get_resource_by_id()\n        +create_resource()\n    }\n    \n    class PayloadBuilder {\n        +construct_payload()\n        +map_properties()\n        +extract_list_values()\n    }\n    \n    class SynchronizationService {\n        +check_values()\n        +sync_resource()\n        +update_value()\n    }\n    \n    MigrationOrchestrator --&gt; OmekaRepository\n    MigrationOrchestrator --&gt; DSPRepository\n    MigrationOrchestrator --&gt; PayloadBuilder\n    MigrationOrchestrator --&gt; SynchronizationService\n\n\n\n\n\n\n\n\nData Flow\n\n\n\n\n\nsequenceDiagram\n    participant Main as main()\n    participant Omeka as OmekaRepository\n    participant Builder as PayloadBuilder\n    participant DSP as DSPRepository\n    participant Sync as SyncService\n    \n    Main-&gt;&gt;Omeka: get_items_from_collection()\n    Omeka-&gt;&gt;Main: items[]\n    \n    loop For each item\n        Main-&gt;&gt;Omeka: get_media(item_id)\n        Omeka-&gt;&gt;Main: media[]\n        \n        Main-&gt;&gt;DSP: get_resource_by_id()\n        DSP-&gt;&gt;Main: existing_resource or None\n        \n        alt Resource doesn't exist\n            Main-&gt;&gt;Builder: construct_payload()\n            Builder-&gt;&gt;Main: payload\n            Main-&gt;&gt;DSP: create_resource(payload)\n        else Resource exists\n            Main-&gt;&gt;Sync: check_values()\n            Sync-&gt;&gt;Main: changes[]\n            Main-&gt;&gt;Sync: apply_updates()\n        end\n    end\n\n\n\n\n\n\nAlso refer to the documentation on the Pipeline Workflow.",
    "crumbs": [
      "Home",
      "Guides",
      "Development Guide"
    ]
  },
  {
    "objectID": "docs/guides/development.html#contributing-guidelines",
    "href": "docs/guides/development.html#contributing-guidelines",
    "title": "Development Guide",
    "section": "Contributing Guidelines",
    "text": "Contributing Guidelines\n\nGit Workflow\n\nCreate Feature Branch\ngit checkout -b feature/description-of-feature\nMake Changes\n# Make your changes\ngit add .\ngit commit -m \"feat: add new synchronization feature\"\nUpdate Documentation\n# Update relevant documentation\n# Add tests for new features\nSubmit Pull Request\ngit push origin feature/description-of-feature\n# Create PR on GitHub\n\n\n\nCommit Message Convention\nFollow Conventional Commits:\n# Types\nfeat: new feature\nfix: bug fix\ndocs: documentation changes\nstyle: code style changes\nrefactor: code refactoring\ntest: test additions/changes\nchore: maintenance tasks\n\n# Examples\nfeat: add support for video files\nfix: handle missing media files gracefully\ndocs: update API documentation\nrefactor: extract payload building to separate module\n\n\nCode Review Checklist\n\nCode follows style guidelines\nTests are included and pass\nDocumentation is updated\nNo sensitive data in commits\nPerformance impact considered\nError handling included\nLogging appropriate",
    "crumbs": [
      "Home",
      "Guides",
      "Development Guide"
    ]
  },
  {
    "objectID": "docs/guides/development.html#debugging",
    "href": "docs/guides/development.html#debugging",
    "title": "Development Guide",
    "section": "Debugging",
    "text": "Debugging\n\nDebugging Configuration\n# Enable debug logging\nimport logging\nlogging.basicConfig(level=logging.DEBUG)\n\n# Add debug prints\ndef debug_item_processing(item):\n    print(f\"Processing item: {item.get('o:id')}\")\n    print(f\"Title: {extract_property(item.get('dcterms:title', []), 1)}\")\n    print(f\"Identifier: {extract_property(item.get('dcterms:identifier', []), 10)}\")\n\n\nCommon Debugging Techniques\n\nInspect API Responses\nimport json\n\n# Pretty print API responses\nresponse = requests.get(url)\nprint(json.dumps(response.json(), indent=2))\nTest Individual Functions\n# Test payload construction\ntest_item = {...}  # Sample Omeka item\npayload = construct_payload(test_item, \"sgb_OBJECT\", \"project_iri\", [], \"\", \"\")\nprint(json.dumps(payload, indent=2))\nValidate Data Transformations\n# Check property extraction\nprops = item.get(\"dcterms:subject\", [])\nsubjects = extract_combined_values(props)\nprint(f\"Extracted subjects: {subjects}\")\n\n\n\nDebug Mode\nAdd debug mode to main script:\nDEBUG_MODE = os.getenv('DEBUG_MODE', 'false').lower() == 'true'\n\nif DEBUG_MODE:\n    # Enable verbose logging\n    logging.getLogger().setLevel(logging.DEBUG)\n    \n    # Add debug breakpoints\n    import pdb; pdb.set_trace()\n    \n    # Save intermediate data\n    with open('debug_payload.json', 'w') as f:\n        json.dump(payload, f, indent=2)",
    "crumbs": [
      "Home",
      "Guides",
      "Development Guide"
    ]
  },
  {
    "objectID": "docs/guides/development.html#code-style",
    "href": "docs/guides/development.html#code-style",
    "title": "Development Guide",
    "section": "Code Style",
    "text": "Code Style\n\nPython Style Guidelines\nFollow PEP 8 with these specific guidelines:\n# Imports\nimport os\nimport logging\nfrom typing import Dict, List, Optional\n\n# Constants\nMAX_RETRIES = 3\nAPI_TIMEOUT = 30\n\n# Function definitions\ndef extract_property(props: List[Dict], prop_id: int, as_uri: bool = False) -&gt; str:\n    \"\"\"Extract property value from Omeka property array.\n    \n    Args:\n        props: List of property dictionaries\n        prop_id: Numerical property ID to find\n        as_uri: Return as formatted URI link\n        \n    Returns:\n        Property value as string or empty string if not found\n    \"\"\"\n    for prop in props:\n        if prop.get(\"property_id\") == prop_id:\n            if as_uri:\n                return f\"[{prop.get('o:label', '')}]({prop.get('@id', '')})\"\n            return prop.get(\"@value\", \"\")\n    return \"\"\n\n# Error handling\ntry:\n    result = api_call()\nexcept requests.RequestException as e:\n    logging.error(f\"API call failed: {e}\")\n    raise\n\n\nCode Formatting Tools\n# Development dependencies are managed via uv\nuv sync --dev  # Installs black, flake8, isort if configured\n\n# Format code\nuv run black scripts/\nuv run isort scripts/\n\n# Check style\nuv run flake8 scripts/\n\n# Pre-commit hooks (configured via pnpm)\npnpm run pre-commit -- run --all-files\n\n\nDocumentation Standards\ndef complex_function(param1: str, param2: Optional[Dict] = None) -&gt; List[str]:\n    \"\"\"Brief description of function purpose.\n    \n    Detailed description if needed. Explain complex logic,\n    assumptions, and important behaviors.\n    \n    Args:\n        param1: Description of first parameter\n        param2: Description of optional parameter with default behavior\n        \n    Returns:\n        Description of return value and its structure\n        \n    Raises:\n        ValueError: When param1 is invalid\n        RequestException: When API calls fail\n        \n    Example:\n        &gt;&gt;&gt; result = complex_function(\"test\", {\"key\": \"value\"})\n        &gt;&gt;&gt; print(result)\n        ['processed', 'values']\n    \"\"\"\n    # Implementation here\n    pass",
    "crumbs": [
      "Home",
      "Guides",
      "Development Guide"
    ]
  },
  {
    "objectID": "docs/guides/development.html#release-process",
    "href": "docs/guides/development.html#release-process",
    "title": "Development Guide",
    "section": "Release Process",
    "text": "Release Process\n\nVersion Management\n# Update version in setup files\n# Follow semantic versioning: MAJOR.MINOR.PATCH\n\n# Tag release\ngit tag -a v1.2.0 -m \"Release version 1.2.0\"\ngit push origin v1.2.0\n\n\nRelease Checklist\n\nAll tests pass\nDocumentation updated\nCHANGELOG.md updated\nVersion numbers updated\nSecurity review completed\nPerformance benchmarks run\nMigration tested on staging\n\n\n\nDeployment\n# Production deployment checklist\n- [ ] Backup current production data\n- [ ] Deploy to staging environment\n- [ ] Run integration tests\n- [ ] Monitor staging for 24 hours\n- [ ] Deploy to production\n- [ ] Monitor production deployment",
    "crumbs": [
      "Home",
      "Guides",
      "Development Guide"
    ]
  },
  {
    "objectID": "docs/datamodel/index.html",
    "href": "docs/datamodel/index.html",
    "title": "Data Model",
    "section": "",
    "text": "TODO\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/api/index.html",
    "href": "docs/api/index.html",
    "title": "API Reference Documentation",
    "section": "",
    "text": "This document provides comprehensive documentation for all Python modules and functions in the omeka2dsp system.",
    "crumbs": [
      "Home",
      "Documentation",
      "API Reference"
    ]
  },
  {
    "objectID": "docs/api/index.html#module-overview",
    "href": "docs/api/index.html#module-overview",
    "title": "API Reference Documentation",
    "section": "Module Overview",
    "text": "Module Overview\nThe omeka2dsp system consists of five main Python modules:\n\n\n\n\n\ngraph TD\n    A[data_2_dasch.py&lt;br/&gt;Main Migration Script] --&gt; B[process_data_from_omeka.py&lt;br/&gt;Omeka Data Extraction]\n    A --&gt; C[api_get_project.py&lt;br/&gt;DSP Project Info]\n    A --&gt; D[api_get_lists.py&lt;br/&gt;DSP Lists]\n    A --&gt; E[api_get_lists_detailed.py&lt;br/&gt;Detailed List Data]\n\n    click A href \"#data_2_dasch.py\" \"Jump to data_2_dasch.py\"\n    click B href \"#process_data_from_omeka.py\" \"Jump to process_data_from_omeka.py\"\n    click C href \"#api_get_project.py\" \"Jump to api_get_project.py\"\n    click D href \"#api_get_lists.py\" \"Jump to api_get_lists.py\"\n    click E href \"#api_get_lists_detailed.py\" \"Jump to api_get_lists_detailed.py\"\n    \n    style A fill:#e3f2fd\n    style B fill:#fff3e0\n    style C fill:#f3e5f5\n    style D fill:#f3e5f5\n    style E fill:#f3e5f5",
    "crumbs": [
      "Home",
      "Documentation",
      "API Reference"
    ]
  },
  {
    "objectID": "docs/api/index.html#data_2_dasch.py",
    "href": "docs/api/index.html#data_2_dasch.py",
    "title": "API Reference Documentation",
    "section": "data_2_dasch.py",
    "text": "data_2_dasch.py\nThe main migration script that orchestrates the entire data transfer process from Omeka to DSP.\n\nCore Functions\n\nmain() -&gt; None\nPurpose: Entry point that orchestrates the entire migration process.\nWorkflow:\n\nParse command-line arguments for processing mode\nFetch and filter data based on mode (all_data, sample_data, test_data)\nAuthenticate with DSP and retrieve project information\nProcess each item: create new or synchronize existing resources\nHandle associated media files\n\nParameters: None (uses command-line arguments)\nReturns: None\nExample Usage:\nuv run python scripts/data_2_dasch.py -m sample_data\n\n\nparse_arguments() -&gt; Namespace\nPurpose: Parses command-line arguments for processing mode selection.\nParameters: None (reads from sys.argv)\nReturns:\n\nNamespace: Contains parsed arguments with mode attribute\n\nAvailable Modes:\n\nall_data: Process entire collection\nsample_data: Process random sample (configurable size)\ntest_data: Process predefined test dataset\n\nExample:\nargs = parse_arguments()\nprint(args.mode)  # 'sample_data'\n\n\n\nAuthentication & Project Functions\n\nlogin(email: str, password: str) -&gt; str\nPurpose: Authenticates with DSP API and retrieves JWT token.\nParameters:\n\nemail: DSP user email address\npassword: DSP user password\n\nReturns:\n\nstr: JWT authentication token\n\nRaises:\n\nrequests.RequestException: On authentication failure\nKeyError: If response format is unexpected\n\nExample:\ntoken = login(\"user@example.com\", \"password\")\n\n\nget_project() -&gt; str\nPurpose: Retrieves project information from DSP API using project shortcode.\nParameters: None (uses PROJECT_SHORT_CODE environment variable)\nReturns:\n\nstr: Project IRI/identifier\n\nSide Effects: Logs project information\nExample:\nproject_iri = get_project()\n# Returns: \"http://rdfh.ch/projects/IbwoJlv8SEa6L13vXyCzMg\"\n\n\nget_lists(project_iri: str) -&gt; list\nPurpose: Retrieves all list configurations for a DSP project.\nParameters:\n\nproject_iri: The project IRI to fetch lists for\n\nReturns:\n\nlist: Array of complete list objects with nodes and values\n\nProcess:\n\nFetches list summary from /admin/lists/\nFor each list, fetches detailed information from /v2/lists/{id}\nReturns complete list data for mapping operations\n\nExample:\nlists = get_lists(project_iri)\nfor list_obj in lists:\n    print(f\"List: {list_obj['listinfo']['name']}\")\n\n\n\nResource Management Functions\n\nget_full_resource(token: str, resource_iri: str) -&gt; dict\nPurpose: Retrieves complete resource data from DSP API.\nParameters:\n\ntoken: JWT authentication token\nresource_iri: URL-encoded resource IRI\n\nReturns:\n\ndict: Complete resource JSON object\n\nUsage: Used for synchronization to compare existing DSP data with Omeka data.\nExample:\nresource_data = get_full_resource(token, urllib.parse.quote(resource_iri, safe=''))\n\n\nget_resource_by_id(token: str, object_class: str, identifier: str) -&gt; dict\nPurpose: Finds a resource by its identifier using SPARQL query.\nParameters:\n\ntoken: JWT authentication token\nobject_class: DSP resource class (e.g., “sgb_OBJECT”)\nidentifier: Unique identifier to search for\n\nReturns:\n\ndict: Resource data if found, empty dict if not found\n\nSPARQL Query: Constructs and executes a SPARQL query to find resources by identifier.\nExample:\nresource = get_resource_by_id(token, f\"{PREFIX}sgb_OBJECT\", \"abb13025\")\nif resource:\n    print(f\"Found resource: {resource['@id']}\")\n\n\ncreate_resource(payload: dict, token: str) -&gt; None\nPurpose: Creates a new resource in DSP using the provided payload.\nParameters:\n\npayload: Complete DSP resource payload (JSON-LD format)\ntoken: JWT authentication token\n\nReturns: None\nSide Effects:\n\nCreates resource in DSP\nLogs creation success/failure\n\nExample:\npayload = construct_payload(omeka_item, f\"{PREFIX}sgb_OBJECT\", project_iri, lists, \"\", \"\")\ncreate_resource(payload, token)\n\n\n\nData Extraction & Transformation Functions\n\nextract_dasch_propvalue(item: dict, prop: str) -&gt; str\nPurpose: Extracts a single property value from a DSP resource.\nParameters:\n\nitem: DSP resource data\nprop: Property name (without prefix)\n\nReturns:\n\nstr: Property value or empty string if not found\n\nSupported Value Types: TextValue, ListValue, LinkValue, UriValue\nExample:\ntitle = extract_dasch_propvalue(dsp_resource, \"title\")\n\n\nextract_dasch_propvalue_multiple(item: dict, prop: str) -&gt; list\nPurpose: Extracts multiple values for a property from a DSP resource.\nParameters:\n\nitem: DSP resource data\nprop: Property name (without prefix)\n\nReturns:\n\nlist: Array of property values\n\nUsage: For properties that can have multiple values (arrays).\nExample:\nsubjects = extract_dasch_propvalue_multiple(dsp_resource, \"subject\")\n\n\nextract_value_from_entry(entry: dict) -&gt; str\nPurpose: Extracts the actual value from a DSP property entry based on its type.\nParameters:\n\nentry: DSP property entry with @type and value fields\n\nReturns:\n\nstr: Extracted value or None\n\nSupported Types:\n\nknora-api:TextValue: Returns knora-api:valueAsString\nknora-api:ListValue: Returns node IRI from knora-api:listValueAsListNode\nknora-api:LinkValue: Returns target IRI from knora-api:linkValueHasTargetIri\nknora-api:UriValue: Returns URI from knora-api:uriValueAsUri\n\nExample:\nvalue = extract_value_from_entry({\n    \"@type\": \"knora-api:TextValue\",\n    \"knora-api:valueAsString\": \"Example text\"\n})\n# Returns: \"Example text\"\n\n\nconstruct_payload(item: dict, type: str, project_iri: str, lists: list, parent_iri: str, internalMediaFilename: str) -&gt; dict\nPurpose: Converts Omeka item data into DSP-compatible JSON-LD payload.\nParameters:\n\nitem: Omeka item data\ntype: DSP resource type (e.g., “sgb_OBJECT”, “sgb_MEDIA_IMAGE”)\nproject_iri: Project IRI for resource association\nlists: DSP lists for value mapping\nparent_iri: Parent resource IRI for linking\ninternalMediaFilename: Internal filename for media resources\n\nReturns:\n\ndict: Complete DSP resource payload in JSON-LD format\n\nKey Transformations:\n\n\n\n\n\n\n\n\n\nOmeka Property\nDSP Property\nValue Type\nNotes\n\n\n\n\ndcterms:title\nrdfs:label\nString\nRequired field\n\n\ndcterms:identifier\nidentifier\nTextValue\nUnique identifier\n\n\ndcterms:description\ndescription\nTextValue\nItem description\n\n\ndcterms:creator\ncreator\nTextValue\nCreator information\n\n\ndcterms:date\ndate\nTextValue\nDate information\n\n\ndcterms:subject\nsubject\nTextValue Array\nSubject tags\n\n\ndcterms:type\ntype\nListValue\nMapped to DSP lists\n\n\ndcterms:format\nformat\nListValue\nMedia format mapping\n\n\ndcterms:language\nlanguage\nListValue\nLanguage mapping\n\n\ndcterms:rights\nrights\nTextValue\nRights information\n\n\ndcterms:license\nlicense\nUriValue\nLicense URL\n\n\n\nExample:\npayload = construct_payload(\n    item=omeka_item,\n    type=f\"{PREFIX}sgb_OBJECT\",\n    project_iri=project_iri,\n    lists=project_lists,\n    parent_iri=\"\",\n    internalMediaFilename=\"\"\n)\n\n\nextract_listvalueiri_from_value(value: str, list_label: str, lists: list) -&gt; str\nPurpose: Maps an Omeka value to a DSP list node IRI.\nParameters:\n\nvalue: Value to map (e.g., “image/jpeg”)\nlist_label: Name of the DSP list to search in\nlists: Array of DSP list objects\n\nReturns:\n\nstr: DSP list node IRI if found, empty string otherwise\n\nProcess:\n\nFinds the list with matching label\nSearches through list nodes for matching value\nReturns the node IRI for API operations\n\nExample:\nformat_iri = extract_listvalueiri_from_value(\n    \"image/jpeg\", \n    \"Internet Media Type\", \n    project_lists\n)\n# Returns: \"http://rdfh.ch/lists/IbwoJlv8SEa6L13vXyCzMg/image-jpeg\"\n\n\n\nSynchronization Functions\n\ncheck_values(dasch_item: dict, omeka_item: dict, lists: list) -&gt; list\nPurpose: Compares DSP and Omeka data to identify changes that need synchronization.\nParameters:\n\ndasch_item: Current DSP resource data\nomeka_item: Current Omeka item data\nlists: DSP lists for value mapping\n\nReturns:\n\nlist: Array of change operations (create, update, delete)\n\nChange Detection:\n\nCompares each property between systems\nIdentifies additions, deletions, and modifications\nHandles both single values and arrays\n\nExample:\nchanges = check_values(dsp_resource, omeka_item, project_lists)\nfor change in changes:\n    print(f\"Action: {change['type']}, Field: {change['field']}\")\n\n\nsync_value(prop: str, prop_type: str, dasch_value: str, omeka_value: str) -&gt; list\nPurpose: Generates sync operations for single-value properties.\nParameters:\n\nprop: Property name\nprop_type: DSP property type (TextValue, ListValue, etc.)\ndasch_value: Current value in DSP\nomeka_value: Current value in Omeka\n\nReturns:\n\nlist: Array of change operations\n\nLogic:\n\nIf values are different, creates update operation\nIf DSP has value but Omeka doesn’t, creates delete operation\nIf Omeka has value but DSP doesn’t, creates create operation\n\n\n\nsync_array_value(prop: str, prop_type: str, dasch_array: list, omeka_array: list) -&gt; list\nPurpose: Generates sync operations for multi-value properties.\nParameters:\n\nprop: Property name\nprop_type: DSP property type\ndasch_array: Current values in DSP\nomeka_array: Current values in Omeka\n\nReturns:\n\nlist: Array of change operations\n\nAlgorithm:\n\nConverts arrays to sets for comparison\nCalculates additions (in Omeka but not DSP)\nCalculates deletions (in DSP but not Omeka)\nGenerates corresponding create/delete operations\n\n\n\nupdate_value(token: str, item: dict, value: str, field: str, field_type: str, type_of_change: str) -&gt; None\nPurpose: Executes a single value update operation via DSP API.\nParameters:\n\ntoken: JWT authentication token\nitem: DSP resource data\nvalue: New value to set\nfield: Property name\nfield_type: DSP value type\ntype_of_change: Operation type (“create”, “update”, “delete”)\n\nReturns: None\nSide Effects:\n\nModifies DSP resource via API\nLogs operation results\n\n\n\n\nFile Upload Functions\n\nupload_file_from_url(file_url: str, token: str, zip: bool = False) -&gt; str\nPurpose: Downloads a file from Omeka and uploads it to DSP storage.\nParameters:\n\nfile_url: URL of file in Omeka\ntoken: JWT authentication token\nzip: Whether to compress file before upload\n\nReturns:\n\nstr: Internal filename assigned by DSP\n\nProcess:\n\nDownloads file from Omeka URL\nSaves to temporary file\nOptionally creates ZIP archive\nUploads to DSP via multipart form\nReturns DSP internal filename\n\nExample:\ninternal_filename = upload_file_from_url(\n    \"https://omeka.example.com/files/image.jpg\",\n    token,\n    zip=False\n)\n\n\nspecify_mediaclass(media_type: str) -&gt; str\nPurpose: Determines appropriate DSP media class based on MIME type.\nParameters:\n\nmedia_type: MIME type string (e.g., “image/jpeg”)\n\nReturns:\n\nstr: DSP media class name\n\nMapping:\n\nimage/* → sgb_MEDIA_IMAGE\napplication/pdf, text/*, application/zip → sgb_MEDIA_ARCHIV\nAll others → sgb_MEDIA_ARCHIV (default)\n\nExample:\nmedia_class = specify_mediaclass(\"image/jpeg\")\n# Returns: \"StadtGeschichteBasel_v1:sgb_MEDIA_IMAGE\"\n\n\n\nUtility Functions\n\narrays_equal(array1: list, array2: list) -&gt; bool\nPurpose: Compares two arrays for equality, ignoring order.\nParameters:\n\narray1: First array to compare\narray2: Second array to compare\n\nReturns:\n\nbool: True if arrays contain the same elements\n\nUsage: Used in synchronization to detect array changes.",
    "crumbs": [
      "Home",
      "Documentation",
      "API Reference"
    ]
  },
  {
    "objectID": "docs/api/index.html#process_data_from_omeka.py",
    "href": "docs/api/index.html#process_data_from_omeka.py",
    "title": "API Reference Documentation",
    "section": "process_data_from_omeka.py",
    "text": "process_data_from_omeka.py\nHandles data extraction and processing from the Omeka API.\n\nCore Functions\n\nget_items_from_collection(collection_id: str) -&gt; list\nPurpose: Retrieves all items from a specified Omeka collection with pagination handling.\nParameters:\n\ncollection_id: Omeka collection/item set ID\n\nReturns:\n\nlist: Array of all items in the collection\n\nFeatures:\n\nAutomatic pagination handling\nRate limiting compliance\nError recovery for temporary failures\n\nExample:\nitems = get_items_from_collection(\"10780\")\nprint(f\"Found {len(items)} items\")\n\n\nget_media(item_id: str) -&gt; list\nPurpose: Retrieves all media files associated with a specific Omeka item.\nParameters:\n\nitem_id: Omeka item ID\n\nReturns:\n\nlist: Array of media objects with metadata and file URLs\n\nExample:\nmedia_files = get_media(\"12345\")\nfor media in media_files:\n    print(f\"Media: {media.get('o:filename')}\")\n\n\nget_paginated_items(url: str, params: dict) -&gt; list\nPurpose: Generic function to handle paginated API requests.\nParameters:\n\nurl: Base API endpoint URL\nparams: Query parameters for first request\n\nReturns:\n\nlist: Combined results from all pages\n\nFeatures:\n\nFollows pagination links automatically\nHandles rate limiting\nError recovery\n\n\n\n\nData Extraction Functions\n\nextract_property(props: list, prop_id: int, as_uri: bool = False, only_label: bool = False) -&gt; str\nPurpose: Extracts a specific property value from Omeka property array.\nParameters:\n\nprops: Array of Omeka property objects\nprop_id: Numerical ID of property to extract\nas_uri: Return as formatted URI link (default: False)\nonly_label: Return only the label (default: False)\n\nReturns:\n\nstr: Property value in requested format\n\nFormats:\n\nDefault: Returns @value field\nas_uri=True: Returns [label](uri) markdown format\nonly_label=True: Returns o:label field only\n\nExample:\ntitle = extract_property(item.get(\"dcterms:title\", []), 1)\ncreator_link = extract_property(item.get(\"dcterms:creator\", []), 2, as_uri=True)\n\n\nextract_combined_values(props: list) -&gt; list\nPurpose: Combines text values and URI references from properties into a single array.\nParameters:\n\nprops: Array of Omeka property objects\n\nReturns:\n\nlist: Combined array of text values and formatted URI links\n\nProcess:\n\nExtracts all @value text fields\nFormats URI references as HTML links\nEscapes semicolons to prevent conflicts\nReturns combined array\n\nExample:\nsubjects = extract_combined_values(item.get(\"dcterms:subject\", []))\n# Returns: [\"History\", \"Basel\", \"&lt;a href='...'&gt;Authority Record&lt;/a&gt;\"]\n\n\n\nUtility Functions\n\nis_valid_url(url: str) -&gt; bool\nPurpose: Validates if a string is a properly formatted URL.\nParameters:\n\nurl: URL string to validate\n\nReturns:\n\nbool: True if URL is valid\n\nExample:\nvalid = is_valid_url(\"https://example.com/file.jpg\")\n\n\ndownload_file(url: str, dest_path: str) -&gt; None\nPurpose: Downloads a file from URL to local path.\nParameters:\n\nurl: Source file URL\ndest_path: Destination file path\n\nReturns: None\nFeatures:\n\nCreates directories as needed\nStreaming download for large files\nError handling and logging",
    "crumbs": [
      "Home",
      "Documentation",
      "API Reference"
    ]
  },
  {
    "objectID": "docs/api/index.html#api_get_project.py",
    "href": "docs/api/index.html#api_get_project.py",
    "title": "API Reference Documentation",
    "section": "api_get_project.py",
    "text": "api_get_project.py\nStandalone script to fetch DSP project information.\n\nget_project() -&gt; None\nPurpose: Fetches project data from DSP API and saves to file.\nEnvironment Variables:\n\nPROJECT_SHORT_CODE: DSP project shortcode\nAPI_HOST: DSP API base URL\n\nOutput: Saves project data to ../data/project_data.json\nExample Usage:\nexport PROJECT_SHORT_CODE=\"0123\"\nexport API_HOST=\"https://api.dasch.swiss\"\nuv run python scripts/api_get_project.py",
    "crumbs": [
      "Home",
      "Documentation",
      "API Reference"
    ]
  },
  {
    "objectID": "docs/api/index.html#api_get_lists.py",
    "href": "docs/api/index.html#api_get_lists.py",
    "title": "API Reference Documentation",
    "section": "api_get_lists.py",
    "text": "api_get_lists.py\nStandalone script to fetch DSP list configurations.\n\nget_lists() -&gt; None\nPurpose: Fetches list summary from DSP API and saves to file.\nConfiguration:\n\nHardcoded project IRI (should be updated for different projects)\nFixed API host (should be made configurable)\n\nOutput: Saves list data to ../data/data_lists.json\nExample Usage:\nuv run python scripts/api_get_lists.py",
    "crumbs": [
      "Home",
      "Documentation",
      "API Reference"
    ]
  },
  {
    "objectID": "docs/api/index.html#api_get_lists_detailed.py",
    "href": "docs/api/index.html#api_get_lists_detailed.py",
    "title": "API Reference Documentation",
    "section": "api_get_lists_detailed.py",
    "text": "api_get_lists_detailed.py\nStandalone script to fetch detailed DSP list information.\n\nget_complete_list(list_id: str) -&gt; dict\nPurpose: Fetches complete list data for a single list ID.\nParameters:\n\nlist_id: DSP list IRI\n\nReturns:\n\ndict: Complete list object with all nodes and values\n\nProcess:\n\nURL-encodes the list IRI\nRequests detailed list data from /v2/lists/{id}\nReturns complete list structure\n\nMain Script Logic:\n\nLoads list summary from data_lists.json\nIterates through each list\nFetches detailed information for each\nSaves all detailed lists to data_lists_detail.json",
    "crumbs": [
      "Home",
      "Documentation",
      "API Reference"
    ]
  },
  {
    "objectID": "docs/api/index.html#configuration-constants",
    "href": "docs/api/index.html#configuration-constants",
    "title": "API Reference Documentation",
    "section": "Configuration Constants",
    "text": "Configuration Constants\n\nEnvironment Variables\n\n\n\n\n\n\n\n\n\n\nVariable\nType\nRequired\nDescription\nDefault\n\n\n\n\nITEM_SET_ID\nstring\nNo\nOmeka collection ID\n“10780”\n\n\nPROJECT_SHORT_CODE\nstring\nYes\nDSP project shortcode\nNone\n\n\nAPI_HOST\nstring\nYes\nDSP API base URL\nNone\n\n\nINGEST_HOST\nstring\nYes\nDSP ingest service URL\nNone\n\n\nDSP_USER\nstring\nYes\nDSP username\nNone\n\n\nDSP_PWD\nstring\nYes\nDSP password\nNone\n\n\nPREFIX\nstring\nNo\nOntology prefix\n“StadtGeschichteBasel_v1:”\n\n\nOMEKA_API_URL\nstring\nNo\nOmeka API base URL\n“https://omeka.unibe.ch/api/”\n\n\nKEY_IDENTITY\nstring\nYes\nOmeka API key identity\nNone\n\n\nKEY_CREDENTIAL\nstring\nYes\nOmeka API key credential\nNone\n\n\n\n\n\nProcessing Constants\n\n\n\n\n\n\n\n\nConstant\nValue\nDescription\n\n\n\n\nNUMBER_RANDOM_OBJECTS\n2\nNumber of items for sample mode\n\n\nTEST_DATA\nSet of identifiers\nSpecific items for test mode",
    "crumbs": [
      "Home",
      "Documentation",
      "API Reference"
    ]
  },
  {
    "objectID": "docs/api/index.html#error-handling",
    "href": "docs/api/index.html#error-handling",
    "title": "API Reference Documentation",
    "section": "Error Handling",
    "text": "Error Handling\n\nException Types\nThe system handles several types of errors:\n\nAuthentication Errors: Invalid credentials, expired tokens\nNetwork Errors: Connection timeouts, API unavailability\nData Validation Errors: Invalid payloads, missing required fields\nRate Limiting: API quota exceeded\nFile System Errors: Permission issues, disk space\n\n\n\nLogging Configuration\nlogging.basicConfig(\n    level=logging.INFO,\n    format=\"%(asctime)s\n -%(levelname)s\n -%(message)s\",\n    handlers=[\n        logging.StreamHandler(),  # Console output\n        logging.FileHandler(\"data_2_dasch.log\", mode='w')  # File output\n    ]\n)\n\n\nError Recovery Strategies\n\nRetry with Exponential Backoff: For temporary network issues\nSkip and Continue: For individual item processing errors\nFail Fast: For critical configuration or authentication errors\nGraceful Degradation: Continue with reduced functionality when possible\n\n\n\nCommon Error Scenarios\n\n\n\n\n\n\n\n\nError\nCause\nRecovery Strategy\n\n\n\n\nAuthentication failure\nInvalid credentials\nRe-authenticate or exit\n\n\nResource not found\nItem doesn’t exist in DSP\nCreate new resource\n\n\nRate limit exceeded\nToo many API requests\nWait and retry\n\n\nInvalid payload\nData format error\nLog error, skip item\n\n\nNetwork timeout\nConnection issues\nRetry with backoff\n\n\nFile upload failure\nFile system or network issue\nRetry or skip media",
    "crumbs": [
      "Home",
      "Documentation",
      "API Reference"
    ]
  },
  {
    "objectID": "LICENSE-AGPL.html",
    "href": "LICENSE-AGPL.html",
    "title": "omeka2dsp",
    "section": "",
    "text": "GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007\nCopyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n                        Preamble\nThe GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.\nThe licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program–to make sure it remains free software for all its users.\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\nDevelopers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.\nA secondary benefit of defending all users’ freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.\nThe GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.\nAn older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.\nThe precise terms and conditions for copying, distribution and modification follow.\n                   TERMS AND CONDITIONS\n\nDefinitions.\n\n“This License” refers to version 3 of the GNU Affero General Public License.\n“Copyright” also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\n“The Program” refers to any copyrightable work licensed under this License. Each licensee is addressed as “you”. “Licensees” and “recipients” may be individuals or organizations.\nTo “modify” a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a “modified version” of the earlier work or a work “based on” the earlier work.\nA “covered work” means either the unmodified Program or a work based on the Program.\nTo “propagate” a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.\nTo “convey” a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays “Appropriate Legal Notices” to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.\n\nSource Code.\n\nThe “source code” for a work means the preferred form of the work for making modifications to it. “Object code” means any non-source form of a work.\nA “Standard Interface” means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.\nThe “System Libraries” of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A “Major Component”, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.\nThe “Corresponding Source” for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work’s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.\nThe Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\nThe Corresponding Source for a work in source code form is that same work.\n\nBasic Permissions.\n\nAll rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.\n\nProtecting Users’ Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\nWhen you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work’s users, your or third parties’ legal rights to forbid circumvention of technological measures.\n\nConveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program’s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an “aggregate” if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation’s users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\n\nConveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.\nA “User Product” is either (1) a “consumer product”, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, “normally used” refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\n“Installation Information” for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\nIf you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\nThe requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\n\nAdditional Terms.\n\n“Additional permissions” are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered “further restrictions” within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\n\nTermination.\n\nYou may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\nHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\nTermination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\n\nAcceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.\nAn “entity transaction” is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party’s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\n\nPatents.\n\nA “contributor” is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor’s “contributor version”.\nA contributor’s “essential patent claims” are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, “control” includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor’s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.\nIn the following three paragraphs, a “patent license” is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To “grant” such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.\nIf you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. “Knowingly relying” means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient’s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.\nA patent license is “discriminatory” if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\n\nNo Surrender of Others’ Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\nNotwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.\nNotwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.\n\nRevised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License “or any later version” applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy’s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\nLater license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\n\nDisclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the “copyright” line and a pointer to where the full notice is found.\n&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.\nAlso add information on how to contact you by electronic and paper mail.\nIf your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source. For example, if your program is a web application, its interface could display a “Source” link that leads users to an archive of the code. There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.\nYou should also get your employer (if you work as a programmer) or school, if any, to sign a “copyright disclaimer” for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/.\n\n\n\n Back to top",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "License (Code)"
    ]
  },
  {
    "objectID": "CHANGELOG.html",
    "href": "CHANGELOG.html",
    "title": "Changelog",
    "section": "",
    "text": "All notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog, and this project adheres to Semantic Versioning.\n\n\n\n\n\nDocs for Zenodo added\nFixed various typos and replaced favicon\n\n\n\n\n\nInitial version",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Changelog"
    ]
  },
  {
    "objectID": "CHANGELOG.html#unreleased",
    "href": "CHANGELOG.html#unreleased",
    "title": "Changelog",
    "section": "",
    "text": "Docs for Zenodo added\nFixed various typos and replaced favicon\n\n\n\n\n\nInitial version",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Changelog"
    ]
  },
  {
    "objectID": "CONTRIBUTING.html",
    "href": "CONTRIBUTING.html",
    "title": "Contributing",
    "section": "",
    "text": "When contributing to this repository, please first discuss the change you wish to make via issue, email, or any other method with the owners of this repository before making a change.\nPlease note we have a code of conduct, please follow it in all your interactions with the project.\n\n\n\nEnsure any install or build dependencies are removed before the end of the layer when doing a build.\nUpdate the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this Pull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Contributing"
    ]
  },
  {
    "objectID": "CONTRIBUTING.html#pull-request-process",
    "href": "CONTRIBUTING.html#pull-request-process",
    "title": "Contributing",
    "section": "",
    "text": "Ensure any install or build dependencies are removed before the end of the layer when doing a build.\nUpdate the README.md with details of changes to the interface, this includes new environment variables, exposed ports, useful file locations and container parameters.\nIncrease the version numbers in any examples files and the README.md to the new version that this Pull Request would represent. The versioning scheme we use is SemVer.\nYou may merge the Pull Request in once you have the sign-off of two other developers, or if you do not have permission to do that, you may request the second reviewer to merge it for you.",
    "crumbs": [
      "Home",
      "omeka2dsp",
      "Contributing"
    ]
  },
  {
    "objectID": "LICENSE.html",
    "href": "LICENSE.html",
    "title": "omeka2dsp",
    "section": "",
    "text": "GNU AFFERO GENERAL PUBLIC LICENSE\n                   Version 3, 19 November 2007\nCopyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n                        Preamble\nThe GNU Affero General Public License is a free, copyleft license for software and other kinds of works, specifically designed to ensure cooperation with the community in the case of network server software.\nThe licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, our General Public Licenses are intended to guarantee your freedom to share and change all versions of a program–to make sure it remains free software for all its users.\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.\nDevelopers that use our General Public Licenses protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License which gives you legal permission to copy, distribute and/or modify the software.\nA secondary benefit of defending all users’ freedom is that improvements made in alternate versions of the program, if they receive widespread use, become available for other developers to incorporate. Many developers of free software are heartened and encouraged by the resulting cooperation. However, in the case of software used on network servers, this result may fail to come about. The GNU General Public License permits making a modified version and letting the public access it on a server without ever releasing its source code to the public.\nThe GNU Affero General Public License is designed specifically to ensure that, in such cases, the modified source code becomes available to the community. It requires the operator of a network server to provide the source code of the modified version running there to the users of that server. Therefore, public use of a modified version, on a publicly accessible server, gives the public access to the source code of the modified version.\nAn older license, called the Affero General Public License and published by Affero, was designed to accomplish similar goals. This is a different license, not a version of the Affero GPL, but Affero has released a new version of the Affero GPL which permits relicensing under this license.\nThe precise terms and conditions for copying, distribution and modification follow.\n                   TERMS AND CONDITIONS\n\nDefinitions.\n\n“This License” refers to version 3 of the GNU Affero General Public License.\n“Copyright” also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.\n“The Program” refers to any copyrightable work licensed under this License. Each licensee is addressed as “you”. “Licensees” and “recipients” may be individuals or organizations.\nTo “modify” a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a “modified version” of the earlier work or a work “based on” the earlier work.\nA “covered work” means either the unmodified Program or a work based on the Program.\nTo “propagate” a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.\nTo “convey” a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays “Appropriate Legal Notices” to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.\n\nSource Code.\n\nThe “source code” for a work means the preferred form of the work for making modifications to it. “Object code” means any non-source form of a work.\nA “Standard Interface” means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.\nThe “System Libraries” of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A “Major Component”, in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.\nThe “Corresponding Source” for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work’s System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.\nThe Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.\nThe Corresponding Source for a work in source code form is that same work.\n\nBasic Permissions.\n\nAll rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary.\n\nProtecting Users’ Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.\nWhen you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work’s users, your or third parties’ legal rights to forbid circumvention of technological measures.\n\nConveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program’s source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an “aggregate” if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation’s users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.\n\nConveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.\nA “User Product” is either (1) a “consumer product”, which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, “normally used” refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.\n“Installation Information” for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.\nIf you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).\nThe requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.\n\nAdditional Terms.\n\n“Additional permissions” are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered “further restrictions” within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.\n\nTermination.\n\nYou may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).\nHowever, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.\nTermination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.\n\nAcceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License.\nAn “entity transaction” is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party’s predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.\n\nPatents.\n\nA “contributor” is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor’s “contributor version”.\nA contributor’s “essential patent claims” are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, “control” includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor’s essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.\nIn the following three paragraphs, a “patent license” is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To “grant” such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.\nIf you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. “Knowingly relying” means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient’s use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.\nA patent license is “discriminatory” if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.\n\nNo Surrender of Others’ Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.\n\nRemote Network Interaction; Use with the GNU General Public License.\n\nNotwithstanding any other provision of this License, if you modify the Program, your modified version must prominently offer all users interacting with it remotely through a computer network (if your version supports such interaction) an opportunity to receive the Corresponding Source of your version by providing access to the Corresponding Source from a network server at no charge, through some standard or customary means of facilitating copying of software. This Corresponding Source shall include the Corresponding Source for any work covered by version 3 of the GNU General Public License that is incorporated pursuant to the following paragraph.\nNotwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the work with which it is combined will remain governed by version 3 of the GNU General Public License.\n\nRevised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU Affero General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\nEach version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU Affero General Public License “or any later version” applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU Affero General Public License, you may choose any version ever published by the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future versions of the GNU Affero General Public License can be used, that proxy’s public statement of acceptance of a version permanently authorizes you to choose that version for the Program.\nLater license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.\n\nDisclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.\n                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the “copyright” line and a pointer to where the full notice is found.\n&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as published\nby the Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.\nAlso add information on how to contact you by electronic and paper mail.\nIf your software can interact with users remotely through a computer network, you should also make sure that it provides a way for users to get its source. For example, if your program is a web application, its interface could display a “Source” link that leads users to an archive of the code. There are many ways you could offer source, and different solutions will be better for different programs; see section 13 for the specific requirements.\nYou should also get your employer (if you work as a programmer) or school, if any, to sign a “copyright disclaimer” for the program, if necessary. For more information on this, and how to apply and follow the GNU AGPL, see https://www.gnu.org/licenses/.\n\n\n\n Back to top"
  }
]